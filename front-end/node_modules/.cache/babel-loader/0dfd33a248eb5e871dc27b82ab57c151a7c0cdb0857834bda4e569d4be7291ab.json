{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { extend } from 'zrender/lib/core/util.js';\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n  return a;\n}\nexport default function graphEdgeVisual(ecModel) {\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var edgeData = seriesModel.getEdgeData();\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\n    // const colorQuery = ['lineStyle', 'color'] as const;\n    // const opacityQuery = ['lineStyle', 'opacity'] as const;\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    edgeData.setVisual('style', seriesModel.getModel('lineStyle').getLineStyle());\n    edgeData.each(function (idx) {\n      var itemModel = edgeData.getItemModel(idx);\n      var edge = graph.getEdgeByIndex(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      // Edge visual must after node visual\n      var style = itemModel.getModel('lineStyle').getLineStyle();\n      var existsStyle = edgeData.ensureUniqueItemVisual(idx, 'style');\n      extend(existsStyle, style);\n      switch (existsStyle.stroke) {\n        case 'source':\n          {\n            var nodeStyle = edge.node1.getVisual('style');\n            existsStyle.stroke = nodeStyle && nodeStyle.fill;\n            break;\n          }\n        case 'target':\n          {\n            var nodeStyle = edge.node2.getVisual('style');\n            existsStyle.stroke = nodeStyle && nodeStyle.fill;\n            break;\n          }\n      }\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\n    });\n  });\n}","map":{"version":3,"names":["extend","normalize","a","Array","graphEdgeVisual","ecModel","eachSeriesByType","seriesModel","graph","getGraph","edgeData","getEdgeData","symbolType","get","symbolSize","setVisual","getModel","getLineStyle","each","idx","itemModel","getItemModel","edge","getEdgeByIndex","getShallow","style","existsStyle","ensureUniqueItemVisual","stroke","nodeStyle","node1","getVisual","fill","node2"],"sources":["D:/code/bugzilla/527/front-end/node_modules/echarts/lib/chart/graph/edgeVisual.js"],"sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { extend } from 'zrender/lib/core/util.js';\r\nfunction normalize(a) {\r\n  if (!(a instanceof Array)) {\r\n    a = [a, a];\r\n  }\r\n  return a;\r\n}\r\nexport default function graphEdgeVisual(ecModel) {\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var graph = seriesModel.getGraph();\r\n    var edgeData = seriesModel.getEdgeData();\r\n    var symbolType = normalize(seriesModel.get('edgeSymbol'));\r\n    var symbolSize = normalize(seriesModel.get('edgeSymbolSize'));\r\n    // const colorQuery = ['lineStyle', 'color'] as const;\r\n    // const opacityQuery = ['lineStyle', 'opacity'] as const;\r\n    edgeData.setVisual('fromSymbol', symbolType && symbolType[0]);\r\n    edgeData.setVisual('toSymbol', symbolType && symbolType[1]);\r\n    edgeData.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\r\n    edgeData.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\r\n    edgeData.setVisual('style', seriesModel.getModel('lineStyle').getLineStyle());\r\n    edgeData.each(function (idx) {\r\n      var itemModel = edgeData.getItemModel(idx);\r\n      var edge = graph.getEdgeByIndex(idx);\r\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\r\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\r\n      // Edge visual must after node visual\r\n      var style = itemModel.getModel('lineStyle').getLineStyle();\r\n      var existsStyle = edgeData.ensureUniqueItemVisual(idx, 'style');\r\n      extend(existsStyle, style);\r\n      switch (existsStyle.stroke) {\r\n        case 'source':\r\n          {\r\n            var nodeStyle = edge.node1.getVisual('style');\r\n            existsStyle.stroke = nodeStyle && nodeStyle.fill;\r\n            break;\r\n          }\r\n        case 'target':\r\n          {\r\n            var nodeStyle = edge.node2.getVisual('style');\r\n            existsStyle.stroke = nodeStyle && nodeStyle.fill;\r\n            break;\r\n          }\r\n      }\r\n      symbolType[0] && edge.setVisual('fromSymbol', symbolType[0]);\r\n      symbolType[1] && edge.setVisual('toSymbol', symbolType[1]);\r\n      symbolSize[0] && edge.setVisual('fromSymbolSize', symbolSize[0]);\r\n      symbolSize[1] && edge.setVisual('toSymbolSize', symbolSize[1]);\r\n    });\r\n  });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}