{"ast":null,"code":"import arraySampleSize from './_arraySampleSize.js';\nimport baseSampleSize from './_baseSampleSize.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/**\r\n * Gets `n` random elements at unique keys from `collection` up to the\r\n * size of `collection`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to sample.\r\n * @param {number} [n=1] The number of elements to sample.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the random elements.\r\n * @example\r\n *\r\n * _.sampleSize([1, 2, 3], 2);\r\n * // => [3, 1]\r\n *\r\n * _.sampleSize([1, 2, 3], 4);\r\n * // => [2, 3, 1]\r\n */\nfunction sampleSize(collection, n, guard) {\n  if (guard ? isIterateeCall(collection, n, guard) : n === undefined) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\nexport default sampleSize;","map":{"version":3,"names":["arraySampleSize","baseSampleSize","isArray","isIterateeCall","toInteger","sampleSize","collection","n","guard","undefined","func"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/sampleSize.js"],"sourcesContent":["import arraySampleSize from './_arraySampleSize.js';\r\nimport baseSampleSize from './_baseSampleSize.js';\r\nimport isArray from './isArray.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Gets `n` random elements at unique keys from `collection` up to the\r\n * size of `collection`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to sample.\r\n * @param {number} [n=1] The number of elements to sample.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the random elements.\r\n * @example\r\n *\r\n * _.sampleSize([1, 2, 3], 2);\r\n * // => [3, 1]\r\n *\r\n * _.sampleSize([1, 2, 3], 4);\r\n * // => [2, 3, 1]\r\n */\r\nfunction sampleSize(collection, n, guard) {\r\n  if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\r\n    n = 1;\r\n  } else {\r\n    n = toInteger(n);\r\n  }\r\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\r\n  return func(collection, n);\r\n}\r\n\r\nexport default sampleSize;\r\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,uBAAuB;AACnD,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,cAAc;AAClC,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,UAAU,EAAEC,CAAC,EAAEC,KAAK,EAAE;EACxC,IAAKA,KAAK,GAAGL,cAAc,CAACG,UAAU,EAAEC,CAAC,EAAEC,KAAK,CAAC,GAAGD,CAAC,KAAKE,SAAS,EAAG;IACpEF,CAAC,GAAG,CAAC;EACP,CAAC,MAAM;IACLA,CAAC,GAAGH,SAAS,CAACG,CAAC,CAAC;EAClB;EACA,IAAIG,IAAI,GAAGR,OAAO,CAACI,UAAU,CAAC,GAAGN,eAAe,GAAGC,cAAc;EACjE,OAAOS,IAAI,CAACJ,UAAU,EAAEC,CAAC,CAAC;AAC5B;AAEA,eAAeF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}