{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"DataStatistics\",\n  class: \"data-statistics\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_hoisted_1"],"sources":["D:\\code\\qd\\seme\\zmz\\front-end\\src\\components\\DataStatistics.vue"],"sourcesContent":["<template>\r\n    <div id=\"DataStatistics\" class=\"data-statistics\"></div>\r\n</template>\r\n\r\n<script setup>\r\n//按需引入\r\nimport { defineComponent, onMounted } from \"vue\";\r\n \r\n//引入创建的echarts.ts文件\r\nimport echarts from \"../store/echarts\";\r\n \r\nexport default defineComponent({\r\n  setup() {\r\n    /**\r\n     * 在使用init方法初始化图表之前，确保DOM元素已经被正确加载。在Vue组件中，\r\n     * 可以使用onMounted钩子函数来确保在DOM准备就绪后再执行初始化操作。\r\n     */\r\n    //如果不使用这个钩子可能会报错\r\n    onMounted(() => {\r\n      /**\r\n        !是非空断言运算符，表示确保找到了匹配的元素，如果找不到元素或其值为\r\n    null 或 undefined，会引发错误。\r\n        document.getElementById(\"main\") 是调用 getElementById 方法，\r\n    传入参数 “main”，用于获取具有 id 为 “main” 的元素。\r\n        echarts.init() 方法用于初始化一个 echarts 图表实例。\r\n    */\r\n \r\n      // 基于准备好的dom，初始化echarts实例\r\n      var chartDom = document.getElementById(\"main\")!;\r\n      var myChart = echarts.init(chartDom);\r\n \r\n      var chartDom1 = document.getElementById(\"main1\")!;\r\n      var myChart1 = echarts.init(chartDom1);\r\n    \r\n      //还可以这样一起写\r\n      // var myChart = echarts.init(document.getElementById(\"main\")!);\r\n \r\n      // 指定图表的配置项和数据\r\n      var option = {\r\n        title: {\r\n          text: \"第一个 ECharts 实例\",\r\n        },\r\n        tooltip: {},\r\n        legend: {\r\n          data: [\"销量\"],\r\n        },\r\n        xAxis: {\r\n          data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"],\r\n        },\r\n        yAxis: {},\r\n        series: [\r\n          {\r\n            name: \"销量\",\r\n            type: \"bar\",\r\n            data: [5, 20, 36, 10, 10, 20],\r\n          },\r\n        ],\r\n      };\r\n      // 指定图表的配置项和数据\r\n      var option1 = {\r\n        title: {\r\n          text: \"第二个 ECharts 实例\",\r\n        },\r\n        tooltip: {\r\n          trigger: \"axis\",\r\n          axisPointer: {\r\n            type: \"cross\",\r\n            label: {\r\n              backgroundColor: \"#6a7985\",\r\n            },\r\n          },\r\n        },\r\n        legend: {\r\n          data: [\"Email\", \"Union Ads\", \"Video Ads\", \"Direct\", \"Search Engine\"],\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {},\r\n          },\r\n        },\r\n        grid: {\r\n          left: \"3%\",\r\n          right: \"4%\",\r\n          bottom: \"3%\",\r\n          containLabel: true,\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: \"category\",\r\n            boundaryGap: false,\r\n            data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n          },\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: \"value\",\r\n          },\r\n        ],\r\n        series: [\r\n          {\r\n            name: \"Email\",\r\n            type: \"line\",\r\n            stack: \"Total\",\r\n            areaStyle: {},\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [120, 132, 101, 134, 90, 230, 210],\r\n          },\r\n          {\r\n            name: \"Union Ads\",\r\n            type: \"line\",\r\n            stack: \"Total\",\r\n            areaStyle: {},\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [220, 182, 191, 234, 290, 330, 310],\r\n          },\r\n          {\r\n            name: \"Video Ads\",\r\n            type: \"line\",\r\n            stack: \"Total\",\r\n            areaStyle: {},\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [150, 232, 201, 154, 190, 330, 410],\r\n          },\r\n          {\r\n            name: \"Direct\",\r\n            type: \"line\",\r\n            stack: \"Total\",\r\n            areaStyle: {},\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [320, 332, 301, 334, 390, 330, 320],\r\n          },\r\n          {\r\n            name: \"Search Engine\",\r\n            type: \"line\",\r\n            stack: \"Total\",\r\n            label: {\r\n              show: true,\r\n              position: \"top\",\r\n            },\r\n            areaStyle: {},\r\n            emphasis: {\r\n              focus: \"series\",\r\n            },\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n          },\r\n        ],\r\n      };\r\n      // 使用刚指定的配置项option和数据显示图表myChart。\r\n      myChart.setOption(option);\r\n      // 使用刚指定的配置项option和数据显示图表myChart。\r\n      myChart1.setOption(option1);\r\n    });\r\n \r\n    return {};\r\n  },\r\n});\r\n\r\n————————————————\r\n\r\n                            版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。\r\n                        \r\n原文链接：https://blog.csdn.net/m0_66570642/article/details/131228441\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACSA,EAAE,EAAC,gBAAgB;EAACC,KAAK,EAAC;;;uBAA/BC,mBAAA,CAAuD,OAAvDC,UAAuD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}