{"ast":null,"code":"import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictLastIndexOf from './_strictLastIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n  nativeMin = Math.min;\n\n/**\r\n * This method is like `_.indexOf` except that it iterates over elements of\r\n * `array` from right to left.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} [fromIndex=array.length-1] The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n * @example\r\n *\r\n * _.lastIndexOf([1, 2, 1, 2], 2);\r\n * // => 3\r\n *\r\n * // Search from the `fromIndex`.\r\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\r\n * // => 1\r\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n  }\n  return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);\n}\nexport default lastIndexOf;","map":{"version":3,"names":["baseFindIndex","baseIsNaN","strictLastIndexOf","toInteger","nativeMax","Math","max","nativeMin","min","lastIndexOf","array","value","fromIndex","length","index","undefined"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/lastIndexOf.js"],"sourcesContent":["import baseFindIndex from './_baseFindIndex.js';\r\nimport baseIsNaN from './_baseIsNaN.js';\r\nimport strictLastIndexOf from './_strictLastIndexOf.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max,\r\n    nativeMin = Math.min;\r\n\r\n/**\r\n * This method is like `_.indexOf` except that it iterates over elements of\r\n * `array` from right to left.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {Array} array The array to inspect.\r\n * @param {*} value The value to search for.\r\n * @param {number} [fromIndex=array.length-1] The index to search from.\r\n * @returns {number} Returns the index of the matched value, else `-1`.\r\n * @example\r\n *\r\n * _.lastIndexOf([1, 2, 1, 2], 2);\r\n * // => 3\r\n *\r\n * // Search from the `fromIndex`.\r\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\r\n * // => 1\r\n */\r\nfunction lastIndexOf(array, value, fromIndex) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return -1;\r\n  }\r\n  var index = length;\r\n  if (fromIndex !== undefined) {\r\n    index = toInteger(fromIndex);\r\n    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\r\n  }\r\n  return value === value\r\n    ? strictLastIndexOf(array, value, index)\r\n    : baseFindIndex(array, baseIsNaN, index, true);\r\n}\r\n\r\nexport default lastIndexOf;\r\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAOC,iBAAiB,MAAM,yBAAyB;AACvD,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG;EACpBC,SAAS,GAAGF,IAAI,CAACG,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAE;EAC5C,IAAIC,MAAM,GAAGH,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACG,MAAM;EAC7C,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,CAAC,CAAC;EACX;EACA,IAAIC,KAAK,GAAGD,MAAM;EAClB,IAAID,SAAS,KAAKG,SAAS,EAAE;IAC3BD,KAAK,GAAGX,SAAS,CAACS,SAAS,CAAC;IAC5BE,KAAK,GAAGA,KAAK,GAAG,CAAC,GAAGV,SAAS,CAACS,MAAM,GAAGC,KAAK,EAAE,CAAC,CAAC,GAAGP,SAAS,CAACO,KAAK,EAAED,MAAM,GAAG,CAAC,CAAC;EACjF;EACA,OAAOF,KAAK,KAAKA,KAAK,GAClBT,iBAAiB,CAACQ,KAAK,EAAEC,KAAK,EAAEG,KAAK,CAAC,GACtCd,aAAa,CAACU,KAAK,EAAET,SAAS,EAAEa,KAAK,EAAE,IAAI,CAAC;AAClD;AAEA,eAAeL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}