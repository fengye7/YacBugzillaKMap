{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { onMounted, watch } from \"vue\";\n// import { defineProps, ref, onMounted, watch } from \"vue\";\nimport axios from 'axios';\n\n//axios\n\nexport default {\n  __name: 'BarChart',\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    xAxisDataKey: {\n      type: String,\n      default: 'date'\n    },\n    yAxisDataKey: {\n      type: String,\n      default: 'value'\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const sev = ref(null);\n    const chartRef = ref(null);\n    var option = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          // Use axis to trigger tooltip\n          type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n        }\n      },\n      legend: {},\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'value'\n      },\n      yAxis: {\n        type: 'category',\n        data: []\n      },\n      series: [\n        // {\n        //     name: 'Direct',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [320, 302, 301, 334, 390, 330, 320]\n        // },\n        // {\n        //     name: 'Mail Ad',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [120, 132, 101, 134, 90, 230, 210]\n        // },\n        // {\n        //     name: 'Affiliate Ad',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [220, 182, 191, 234, 290, 330, 310]\n        // },\n        // {\n        //     name: 'Video Ad',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [150, 212, 201, 154, 190, 330, 410]\n        // },\n        // {\n        //     name: 'Search Engine',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [820, 832, 901, 934, 1290, 1330, 1320]\n        // }\n      ]\n    };\n    let baseUrl = 'http://47.120.41.97:8002/bugs/';\n    const fetchRef = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'statuses');\n        // chartRef = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        if (chart) {\n          chart.setOption(getOption());\n        }\n        console.log('chartRef', chartRef);\n        console.log('chartRefvalue', chartRef.value);\n\n        // option.yAxis.data = chartRef.value\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchSev = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'severity');\n        // sev = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n\n        console.log('severity', sev);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchData = async () => {\n      for (var sta in chartRef.value) {\n        option.series.push({\n          name: sta,\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: []\n        });\n        console.log('fuck', typeof chartRef);\n        console.log('sta', sta);\n        console.log('option.series', option.series);\n        // for (var s in sev.value) {\n        //     await axios.get(baseUrl + 'severityStatusCount', {\n        //         params: {\n        //             status: sta,\n        //             severity: sta,\n        //         }\n        //     }).then(response => {\n        //         console.log(response.data);\n        //         // 处理成功的情况\n        //         option.series.slice(-1).data.push(response.data.count);\n\n        //     })\n        //         .catch(error => {\n        //             // 处理错误情况\n        //             console.error('Error fetching data:', error);\n        //         });\n        // }\n      }\n    };\n    const props = __props;\n    onMounted(() => {\n      initChart();\n    });\n    watch(() => props.data, () => {\n      if (chart) {\n        chart.setOption(getOption());\n      }\n    }, {\n      deep: true\n    });\n    let chart;\n    const getOption = () => {\n      return option;\n    };\n\n    // {\n    //     return {\n    //         xAxis: {\n    //             type: 'category',\n    //             data: props.data.map(item => item[props.xAxisDataKey])\n    //         },\n    //         yAxis: {\n    //             type: 'value'\n    //         },\n    //         series: [\n    //             {\n    //                 data: props.data.map(item => item[props.yAxisDataKey]),\n    //                 type: 'bar'\n    //             }\n    //         ]\n    //     };\n    // };\n\n    const initChart = async () => {\n      await fetchRef();\n      option.yAxis.data = chartRef.value;\n      console.log('a');\n      chart = echarts.init(chartRef.value);\n      // chart = echarts.init(chartRef.value);\n      console.log('b');\n      chart.setOption(getOption());\n      console.log('c');\n      fetchSev();\n      console.log('d');\n      fetchData();\n      console.log('e');\n    };\n    const __returned__ = {\n      sev,\n      chartRef,\n      get option() {\n        return option;\n      },\n      set option(v) {\n        option = v;\n      },\n      get baseUrl() {\n        return baseUrl;\n      },\n      set baseUrl(v) {\n        baseUrl = v;\n      },\n      fetchRef,\n      fetchSev,\n      fetchData,\n      props,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      getOption,\n      initChart,\n      get echarts() {\n        return echarts;\n      },\n      onMounted,\n      watch,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","onMounted","watch","axios","sev","ref","chartRef","option","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","data","series","baseUrl","fetchRef","response","get","value","chart","setOption","getOption","console","log","error","fetchSev","fetchData","sta","push","name","stack","label","show","emphasis","focus","props","__props","initChart","deep","init"],"sources":["D:/code/bugzilla/527/front-end/src/components/BarChart.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <div ref=\"chartRef\" :style=\"{ width: '1000%', height: '600%' }\"></div>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { defineProps, onMounted, watch } from \"vue\";\r\n// import { defineProps, ref, onMounted, watch } from \"vue\";\r\nimport axios from 'axios';\r\n\r\n//axios\r\nconst sev=ref(null);\r\nconst chartRef=ref(null);\r\nvar option = {\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            // Use axis to trigger tooltip\r\n            type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\r\n        }\r\n    },\r\n    legend: {},\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'value'\r\n    },\r\n    yAxis: {\r\n        type: 'category',\r\n        data: []\r\n    },\r\n    series: [\r\n        // {\r\n        //     name: 'Direct',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [320, 302, 301, 334, 390, 330, 320]\r\n        // },\r\n        // {\r\n        //     name: 'Mail Ad',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [120, 132, 101, 134, 90, 230, 210]\r\n        // },\r\n        // {\r\n        //     name: 'Affiliate Ad',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [220, 182, 191, 234, 290, 330, 310]\r\n        // },\r\n        // {\r\n        //     name: 'Video Ad',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [150, 212, 201, 154, 190, 330, 410]\r\n        // },\r\n        // {\r\n        //     name: 'Search Engine',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [820, 832, 901, 934, 1290, 1330, 1320]\r\n        // }\r\n    ]\r\n};\r\n\r\nlet baseUrl = 'http://47.120.41.97:8002/bugs/'\r\n\r\nconst fetchRef = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'statuses');\r\n        // chartRef = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n        console.log('chartRef', chartRef)\r\n        console.log('chartRefvalue', chartRef.value)\r\n\r\n        // option.yAxis.data = chartRef.value\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchSev = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'severity');\r\n        // sev = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n\r\n        console.log('severity', sev)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchData = async () => {\r\n    for (var sta in chartRef.value) {\r\n        option.series.push({\r\n            name: sta,\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: { show: true },\r\n            emphasis: { focus: 'series' },\r\n            data: []\r\n        });\r\n\r\n        console.log('fuck', typeof chartRef)\r\n        console.log('sta', sta)\r\n        console.log('option.series', option.series)\r\n        // for (var s in sev.value) {\r\n        //     await axios.get(baseUrl + 'severityStatusCount', {\r\n        //         params: {\r\n        //             status: sta,\r\n        //             severity: sta,\r\n        //         }\r\n        //     }).then(response => {\r\n        //         console.log(response.data);\r\n        //         // 处理成功的情况\r\n        //         option.series.slice(-1).data.push(response.data.count);\r\n\r\n        //     })\r\n        //         .catch(error => {\r\n        //             // 处理错误情况\r\n        //             console.error('Error fetching data:', error);\r\n        //         });\r\n        // }\r\n    }\r\n\r\n};\r\n\r\nconst props = defineProps({\r\n    data: {\r\n        type: Array,\r\n        required: true\r\n    },\r\n    xAxisDataKey: {\r\n        type: String,\r\n        default: 'date'\r\n    },\r\n    yAxisDataKey: {\r\n        type: String,\r\n        default: 'value'\r\n    }\r\n});\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nlet chart;\r\n\r\nconst getOption = () => {\r\n    return option;\r\n};\r\n\r\n\r\n// {\r\n//     return {\r\n//         xAxis: {\r\n//             type: 'category',\r\n//             data: props.data.map(item => item[props.xAxisDataKey])\r\n//         },\r\n//         yAxis: {\r\n//             type: 'value'\r\n//         },\r\n//         series: [\r\n//             {\r\n//                 data: props.data.map(item => item[props.yAxisDataKey]),\r\n//                 type: 'bar'\r\n//             }\r\n//         ]\r\n//     };\r\n// };\r\n\r\nconst initChart = async () => {\r\n    await fetchRef();\r\n    option.yAxis.data = chartRef.value\r\n    console.log('a')\r\n    chart = echarts.init(chartRef.value);\r\n    // chart = echarts.init(chartRef.value);\r\n    console.log('b')\r\n    chart.setOption(getOption());\r\n    console.log('c')\r\n    fetchSev();\r\n    console.log('d')\r\n    fetchData();\r\n    console.log('e')\r\n};\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}