{"ast":null,"code":"import * as echarts from \"echarts\";\nimport { ref, onMounted, watch } from \"vue\";\nexport default {\n  __name: 'ScatterChart',\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    xAxisDataKey: {\n      type: String,\n      default: 'date'\n    },\n    yAxisDataKey: {\n      type: String,\n      default: 'value'\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const chartRef = ref(null);\n    onMounted(() => {\n      initChart();\n    });\n    watch(() => props.data, () => {\n      if (chart) {\n        chart.setOption(getOption());\n      }\n    }, {\n      deep: true\n    });\n    let chart;\n    const getOption = () => {\n      return {\n        xAxis: {},\n        yAxis: {},\n        series: [{\n          symbolSize: 20,\n          data: [[10.0, 8.04], [8.07, 6.95], [13.0, 7.58], [9.05, 8.81], [11.0, 8.33], [14.0, 7.66], [13.4, 6.81], [10.0, 6.33], [14.0, 8.96], [12.5, 6.82], [9.15, 7.2], [11.5, 7.2], [3.03, 4.23], [12.2, 7.83], [2.02, 4.47], [1.05, 3.33], [4.05, 4.96], [6.03, 7.24], [12.0, 6.26], [12.0, 8.84], [7.08, 5.82], [5.02, 5.68]],\n          type: 'scatter'\n        }]\n      };\n    };\n    const initChart = () => {\n      chart = echarts.init(chartRef.value);\n      chart.setOption(getOption());\n    };\n    const __returned__ = {\n      props,\n      chartRef,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      getOption,\n      initChart,\n      get echarts() {\n        return echarts;\n      },\n      ref,\n      onMounted,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","ref","onMounted","watch","props","__props","chartRef","initChart","data","chart","setOption","getOption","deep","xAxis","yAxis","series","symbolSize","type","init","value"],"sources":["D:/code/bugzilla/527/front-end/src/components/ScatterChart.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <div ref=\"chartRef\" :style=\"{ width: '1000%', height: '600%' }\"></div>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { defineProps, ref, onMounted, watch } from \"vue\";\r\n\r\nconst props = defineProps({\r\n    data: {\r\n        type: Array,\r\n        required: true\r\n    },\r\n    xAxisDataKey: {\r\n        type: String,\r\n        default: 'date'\r\n    },\r\n    yAxisDataKey: {\r\n        type: String,\r\n        default: 'value'\r\n    }\r\n});\r\n\r\nconst chartRef = ref(null);\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nlet chart;\r\n\r\nconst getOption = () => {\r\n    return {\r\n        xAxis: {\r\n        },\r\n        yAxis: {\r\n        },\r\n        series: [\r\n            {\r\n                symbolSize: 20,\r\n                data: [\r\n                    [10.0, 8.04],\r\n                    [8.07, 6.95],\r\n                    [13.0, 7.58],\r\n                    [9.05, 8.81],\r\n                    [11.0, 8.33],\r\n                    [14.0, 7.66],\r\n                    [13.4, 6.81],\r\n                    [10.0, 6.33],\r\n                    [14.0, 8.96],\r\n                    [12.5, 6.82],\r\n                    [9.15, 7.2],\r\n                    [11.5, 7.2],\r\n                    [3.03, 4.23],\r\n                    [12.2, 7.83],\r\n                    [2.02, 4.47],\r\n                    [1.05, 3.33],\r\n                    [4.05, 4.96],\r\n                    [6.03, 7.24],\r\n                    [12.0, 6.26],\r\n                    [12.0, 8.84],\r\n                    [7.08, 5.82],\r\n                    [5.02, 5.68]\r\n                ],\r\n                type: 'scatter'\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\nconst initChart = () => {\r\n    chart = echarts.init(chartRef.value);\r\n    chart.setOption(getOption());\r\n};\r\n\r\n</script>"],"mappings":"AAOA,OAAO,KAAKA,OAAO,MAAM,SAAS;AAClC,SAAsBC,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;IAExD,MAAMC,KAAK,GAAGC,OAaZ;IAEF,MAAMC,QAAQ,GAAGL,GAAG,CAAC,IAAI,CAAC;IAE1BC,SAAS,CAAC,MAAM;MACZK,SAAS,CAAC,CAAC;IACf,CAAC,CAAC;IAEFJ,KAAK,CACD,MAAMC,KAAK,CAACI,IAAI,EAChB,MAAM;MACF,IAAIC,KAAK,EAAE;QACPA,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;MAChC;IACJ,CAAC,EACD;MAAEC,IAAI,EAAE;IAAK,CACjB,CAAC;IAED,IAAIH,KAAK;IAET,MAAME,SAAS,GAAGA,CAAA,KAAM;MACpB,OAAO;QACHE,KAAK,EAAE,CACP,CAAC;QACDC,KAAK,EAAE,CACP,CAAC;QACDC,MAAM,EAAE,CACJ;UACIC,UAAU,EAAE,EAAE;UACdR,IAAI,EAAE,CACF,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,GAAG,CAAC,EACX,CAAC,IAAI,EAAE,GAAG,CAAC,EACX,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,EACZ,CAAC,IAAI,EAAE,IAAI,CAAC,CACf;UACDS,IAAI,EAAE;QACV,CAAC;MAET,CAAC;IACL,CAAC;IAED,MAAMV,SAAS,GAAGA,CAAA,KAAM;MACpBE,KAAK,GAAGT,OAAO,CAACkB,IAAI,CAACZ,QAAQ,CAACa,KAAK,CAAC;MACpCV,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;IAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}