{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { ref, onMounted, watch } from \"vue\";\nimport axios from 'axios';\n\n//axios\n\nexport default {\n  __name: 'BarChart',\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    xAxisDataKey: {\n      type: String,\n      default: 'date'\n    },\n    yAxisDataKey: {\n      type: String,\n      default: 'value'\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const sev = ref(null);\n    const data = ref(null);\n    const chartRef = ref(null);\n    let baseUrl = 'http://47.120.41.97:8002/bugs/';\n    const fetchRef = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'statuses');\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        if (chart) {\n          chart.setOption(getOption());\n        }\n        console.log(chartRef);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchSev = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'severity');\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n\n        console.log(sev);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'severityStatusCount', severity);\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n\n        console.log(sev);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const props = __props;\n    onMounted(() => {\n      initChart();\n    });\n    watch(() => props.data, () => {\n      if (chart) {\n        chart.setOption(getOption());\n      }\n    }, {\n      deep: true\n    });\n    let chart;\n    const getOption = () => {\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // Use axis to trigger tooltip\n            type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n          }\n        },\n        legend: {},\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: {\n          type: 'value'\n        },\n        yAxis: {\n          type: 'category',\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        series: [{\n          name: 'Direct',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: [320, 302, 301, 334, 390, 330, 320]\n        }, {\n          name: 'Mail Ad',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: [120, 132, 101, 134, 90, 230, 210]\n        }, {\n          name: 'Affiliate Ad',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: [220, 182, 191, 234, 290, 330, 310]\n        }, {\n          name: 'Video Ad',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: [150, 212, 201, 154, 190, 330, 410]\n        }, {\n          name: 'Search Engine',\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: [820, 832, 901, 934, 1290, 1330, 1320]\n        }]\n      };\n      for (const serie of seriesData) {\n        option.series.push({\n          name: serie.name,\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: serie.data\n        });\n      }\n      return option;\n    };\n\n    // {\n    //     return {\n    //         xAxis: {\n    //             type: 'category',\n    //             data: props.data.map(item => item[props.xAxisDataKey])\n    //         },\n    //         yAxis: {\n    //             type: 'value'\n    //         },\n    //         series: [\n    //             {\n    //                 data: props.data.map(item => item[props.yAxisDataKey]),\n    //                 type: 'bar'\n    //             }\n    //         ]\n    //     };\n    // };\n\n    const initChart = () => {\n      fetchRef();\n      fetchSev();\n      chart = echarts.init(chartRef.value);\n      chart.setOption(getOption());\n    };\n    const __returned__ = {\n      sev,\n      data,\n      chartRef,\n      get baseUrl() {\n        return baseUrl;\n      },\n      set baseUrl(v) {\n        baseUrl = v;\n      },\n      fetchRef,\n      fetchSev,\n      fetchData,\n      props,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      getOption,\n      initChart,\n      get echarts() {\n        return echarts;\n      },\n      ref,\n      onMounted,\n      watch,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","ref","onMounted","watch","axios","sev","data","chartRef","baseUrl","fetchRef","response","get","value","chart","setOption","getOption","console","log","error","fetchSev","fetchData","severity","props","__props","initChart","deep","option","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","series","name","stack","label","show","emphasis","focus","serie","seriesData","push","init"],"sources":["D:/code/bugzilla/527/front-end/src/components/BarChart.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <div ref=\"chartRef\" :style=\"{ width: '1000%', height: '600%' }\"></div>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { defineProps, ref, onMounted, watch } from \"vue\";\r\nimport axios from 'axios';\r\n\r\n//axios\r\nconst sev = ref(null);\r\nconst data = ref(null);\r\nconst chartRef = ref(null);\r\n\r\nlet baseUrl = 'http://47.120.41.97:8002/bugs/'\r\n\r\nconst fetchRef = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'statuses');\r\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n        console.log(chartRef)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchSev = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'severity');\r\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n\r\n        console.log(sev)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchData = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'severityStatusCount', severity);\r\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n\r\n        console.log(sev)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst props = defineProps({\r\n    data: {\r\n        type: Array,\r\n        required: true\r\n    },\r\n    xAxisDataKey: {\r\n        type: String,\r\n        default: 'date'\r\n    },\r\n    yAxisDataKey: {\r\n        type: String,\r\n        default: 'value'\r\n    }\r\n});\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nlet chart;\r\n\r\nconst getOption = () => {\r\n    const option = {\r\n        tooltip: {\r\n            trigger: 'axis',\r\n            axisPointer: {\r\n                // Use axis to trigger tooltip\r\n                type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\r\n            }\r\n        },\r\n        legend: {},\r\n        grid: {\r\n            left: '3%',\r\n            right: '4%',\r\n            bottom: '3%',\r\n            containLabel: true\r\n        },\r\n        xAxis: {\r\n            type: 'value'\r\n        },\r\n        yAxis: {\r\n            type: 'category',\r\n            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        },\r\n        series: [\r\n            {\r\n                name: 'Direct',\r\n                type: 'bar',\r\n                stack: 'total',\r\n                label: {\r\n                    show: true\r\n                },\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [320, 302, 301, 334, 390, 330, 320]\r\n            },\r\n            {\r\n                name: 'Mail Ad',\r\n                type: 'bar',\r\n                stack: 'total',\r\n                label: {\r\n                    show: true\r\n                },\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [120, 132, 101, 134, 90, 230, 210]\r\n            },\r\n            {\r\n                name: 'Affiliate Ad',\r\n                type: 'bar',\r\n                stack: 'total',\r\n                label: {\r\n                    show: true\r\n                },\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [220, 182, 191, 234, 290, 330, 310]\r\n            },\r\n            {\r\n                name: 'Video Ad',\r\n                type: 'bar',\r\n                stack: 'total',\r\n                label: {\r\n                    show: true\r\n                },\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [150, 212, 201, 154, 190, 330, 410]\r\n            },\r\n            {\r\n                name: 'Search Engine',\r\n                type: 'bar',\r\n                stack: 'total',\r\n                label: {\r\n                    show: true\r\n                },\r\n                emphasis: {\r\n                    focus: 'series'\r\n                },\r\n                data: [820, 832, 901, 934, 1290, 1330, 1320]\r\n            }\r\n        ]\r\n    };\r\n\r\n    for (const serie of seriesData) {\r\n        option.series.push({\r\n            name: serie.name,\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: { show: true },\r\n            emphasis: { focus: 'series' },\r\n            data: serie.data\r\n        });\r\n    }\r\n\r\n    return option;\r\n};\r\n\r\n\r\n// {\r\n//     return {\r\n//         xAxis: {\r\n//             type: 'category',\r\n//             data: props.data.map(item => item[props.xAxisDataKey])\r\n//         },\r\n//         yAxis: {\r\n//             type: 'value'\r\n//         },\r\n//         series: [\r\n//             {\r\n//                 data: props.data.map(item => item[props.yAxisDataKey]),\r\n//                 type: 'bar'\r\n//             }\r\n//         ]\r\n//     };\r\n// };\r\n\r\nconst initChart = () => {\r\n    fetchRef();\r\n    fetchSev();\r\n    chart = echarts.init(chartRef.value);\r\n    chart.setOption(getOption());\r\n};\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}