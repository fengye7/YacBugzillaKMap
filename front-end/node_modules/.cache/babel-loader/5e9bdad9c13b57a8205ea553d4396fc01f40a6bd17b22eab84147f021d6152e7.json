{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { ref, onMounted, watch } from \"vue\";\nimport axios from 'axios';\n\n//axios\n\nexport default {\n  __name: 'BarChart',\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    xAxisDataKey: {\n      type: String,\n      default: 'date'\n    },\n    yAxisDataKey: {\n      type: String,\n      default: 'value'\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const sev = ref(null);\n    const data = ref(null);\n    const chartRef = ref(null);\n    let baseUrl = 'http://47.120.41.97:8002/bugs/';\n    const fetchRef = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'statuses');\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        if (chart) {\n          chart.setOption(getOption());\n        }\n        console.log(chartRef);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchSev = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'severity');\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n\n        console.log(sev);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchData = async () => {\n      for (const s of sev.value) {\n        for (const sta of chartRef.value) {\n          const response = await axios.get(baseUrl + 'severityStatusCount', {\n            params: {\n              status: sta,\n              severity: s\n            }\n          }).then(response => {\n            // 处理成功的情况\n            data.value = response.data;\n          }).catch(error => {\n            // 处理错误情况\n            console.error('Error fetching data:', error);\n          });\n        }\n      }\n    };\n    const props = __props;\n    onMounted(() => {\n      initChart();\n    });\n    watch(() => props.data, () => {\n      if (chart) {\n        chart.setOption(getOption());\n      }\n    }, {\n      deep: true\n    });\n    let chart;\n    const getOption = () => {\n      for (const serie of seriesData) {\n        option.series.push({\n          name: serie.name,\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: serie.data\n        });\n      }\n      return option;\n    };\n\n    // {\n    //     return {\n    //         xAxis: {\n    //             type: 'category',\n    //             data: props.data.map(item => item[props.xAxisDataKey])\n    //         },\n    //         yAxis: {\n    //             type: 'value'\n    //         },\n    //         series: [\n    //             {\n    //                 data: props.data.map(item => item[props.yAxisDataKey]),\n    //                 type: 'bar'\n    //             }\n    //         ]\n    //     };\n    // };\n\n    const initChart = () => {\n      fetchRef();\n      fetchSev();\n      chart = echarts.init(chartRef.value);\n      chart.setOption(getOption());\n    };\n    const __returned__ = {\n      sev,\n      data,\n      chartRef,\n      get baseUrl() {\n        return baseUrl;\n      },\n      set baseUrl(v) {\n        baseUrl = v;\n      },\n      fetchRef,\n      fetchSev,\n      fetchData,\n      props,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      getOption,\n      initChart,\n      get echarts() {\n        return echarts;\n      },\n      ref,\n      onMounted,\n      watch,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","ref","onMounted","watch","axios","sev","data","chartRef","baseUrl","fetchRef","response","get","value","chart","setOption","getOption","console","log","error","fetchSev","fetchData","s","sta","params","status","severity","then","catch","props","__props","initChart","deep","serie","seriesData","option","series","push","name","type","stack","label","show","emphasis","focus","init"],"sources":["D:/code/bugzilla/527/front-end/src/components/BarChart.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <div ref=\"chartRef\" :style=\"{ width: '1000%', height: '600%' }\"></div>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { defineProps, ref, onMounted, watch } from \"vue\";\r\nimport axios from 'axios';\r\n\r\n//axios\r\nconst sev = ref(null);\r\nconst data = ref(null);\r\nconst chartRef = ref(null);\r\n\r\nlet baseUrl = 'http://47.120.41.97:8002/bugs/'\r\n\r\nconst fetchRef = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'statuses');\r\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n        console.log(chartRef)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchSev = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'severity');\r\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n\r\n        console.log(sev)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchData = async () => {\r\n    for (const s of sev.value) {\r\n        for (const sta of chartRef.value) {\r\n            const response = await axios.get(baseUrl + 'severityStatusCount', {\r\n                params: {\r\n                    status: sta,\r\n                    severity: s,\r\n                }\r\n            }).then(response => {\r\n                // 处理成功的情况\r\n                data.value = response.data;\r\n\r\n            })\r\n            .catch(error => {\r\n                // 处理错误情况\r\n                console.error('Error fetching data:', error);\r\n            });\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst props = defineProps({\r\n    data: {\r\n        type: Array,\r\n        required: true\r\n    },\r\n    xAxisDataKey: {\r\n        type: String,\r\n        default: 'date'\r\n    },\r\n    yAxisDataKey: {\r\n        type: String,\r\n        default: 'value'\r\n    }\r\n});\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nlet chart;\r\n\r\nconst getOption = () => {\r\n    for (const serie of seriesData) {\r\n        option.series.push({\r\n            name: serie.name,\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: { show: true },\r\n            emphasis: { focus: 'series' },\r\n            data: serie.data\r\n        });\r\n    }\r\n\r\n    return option;\r\n};\r\n\r\n\r\n// {\r\n//     return {\r\n//         xAxis: {\r\n//             type: 'category',\r\n//             data: props.data.map(item => item[props.xAxisDataKey])\r\n//         },\r\n//         yAxis: {\r\n//             type: 'value'\r\n//         },\r\n//         series: [\r\n//             {\r\n//                 data: props.data.map(item => item[props.yAxisDataKey]),\r\n//                 type: 'bar'\r\n//             }\r\n//         ]\r\n//     };\r\n// };\r\n\r\nconst initChart = () => {\r\n    fetchRef();\r\n    fetchSev();\r\n    chart = echarts.init(chartRef.value);\r\n    chart.setOption(getOption());\r\n};\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}