{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport ChartView from '../../view/Chart.js';\nimport SunburstPiece from './SunburstPiece.js';\nimport DataDiffer from '../../data/DataDiffer.js';\nimport { ROOT_TO_NODE_ACTION } from './sunburstAction.js';\nimport { windowOpen } from '../../util/format.js';\nvar SunburstView = /** @class */function (_super) {\n  __extends(SunburstView, _super);\n  function SunburstView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = SunburstView.type;\n    return _this;\n  }\n  SunburstView.prototype.render = function (seriesModel, ecModel, api,\n  // @ts-ignore\n  payload) {\n    var self = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n    this._initEvents();\n    this._oldChildren = newChildren;\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n      function getKey(node) {\n        return node.getId();\n      }\n      function processNode(newIdx, oldIdx) {\n        var newNode = newIdx == null ? null : newChildren[newIdx];\n        var oldNode = oldIdx == null ? null : oldChildren[oldIdx];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, seriesModel, ecModel, api);\n            // For tooltip\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel, api);\n          group.add(piece);\n          // For tooltip\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (self.virtualPiece) {\n          // Update\n          self.virtualPiece.updateData(false, virtualRoot, seriesModel, ecModel, api);\n        } else {\n          // Add\n          self.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel, api);\n          group.add(self.virtualPiece);\n        }\n        // TODO event scope\n        viewRoot.piece.off('click');\n        self.virtualPiece.on('click', function (e) {\n          self._rootToNode(viewRoot.parentNode);\n        });\n      } else if (self.virtualPiece) {\n        // Remove\n        group.remove(self.virtualPiece);\n        self.virtualPiece = null;\n      }\n    }\n  };\n  /**\r\n   * @private\r\n   */\n  SunburstView.prototype._initEvents = function () {\n    var _this = this;\n    this.group.off('click');\n    this.group.on('click', function (e) {\n      var targetFound = false;\n      var viewRoot = _this.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n          if (nodeClick === 'rootToNode') {\n            _this._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              windowOpen(link, linkTarget);\n            }\n          }\n          targetFound = true;\n        }\n      });\n    });\n  };\n  /**\r\n   * @private\r\n   */\n  SunburstView.prototype._rootToNode = function (node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  };\n  /**\r\n   * @implement\r\n   */\n  SunburstView.prototype.containPoint = function (point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  };\n  SunburstView.type = 'sunburst';\n  return SunburstView;\n}(ChartView);\nexport default SunburstView;","map":{"version":3,"names":["__extends","zrUtil","ChartView","SunburstPiece","DataDiffer","ROOT_TO_NODE_ACTION","windowOpen","SunburstView","_super","_this","apply","arguments","type","prototype","render","seriesModel","ecModel","api","payload","self","data","getData","virtualRoot","tree","root","newRoot","getViewRoot","group","renderLabelForZeroData","get","newChildren","eachNode","node","push","oldChildren","_oldChildren","dualTravel","renderRollUp","_initEvents","length","getKey","add","processNode","update","remove","curry","execute","getId","newIdx","oldIdx","newNode","oldNode","doRenderNode","getValue","piece","updateData","setItemGraphicEl","dataIndex","removeNode","viewRoot","depth","virtualPiece","off","on","e","_rootToNode","parentNode","targetFound","target","nodeClick","getModel","itemModel","link","linkTarget","dispatchAction","from","uid","seriesId","id","targetNode","containPoint","point","treeRoot","itemLayout","getItemLayout","dx","cx","dy","cy","radius","Math","sqrt","r","r0"],"sources":["D:/code/bugzilla/527/front-end/node_modules/echarts/lib/chart/sunburst/SunburstView.js"],"sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport ChartView from '../../view/Chart.js';\r\nimport SunburstPiece from './SunburstPiece.js';\r\nimport DataDiffer from '../../data/DataDiffer.js';\r\nimport { ROOT_TO_NODE_ACTION } from './sunburstAction.js';\r\nimport { windowOpen } from '../../util/format.js';\r\nvar SunburstView = /** @class */function (_super) {\r\n  __extends(SunburstView, _super);\r\n  function SunburstView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n    _this.type = SunburstView.type;\r\n    return _this;\r\n  }\r\n  SunburstView.prototype.render = function (seriesModel, ecModel, api,\r\n  // @ts-ignore\r\n  payload) {\r\n    var self = this;\r\n    this.seriesModel = seriesModel;\r\n    this.api = api;\r\n    this.ecModel = ecModel;\r\n    var data = seriesModel.getData();\r\n    var virtualRoot = data.tree.root;\r\n    var newRoot = seriesModel.getViewRoot();\r\n    var group = this.group;\r\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\r\n    var newChildren = [];\r\n    newRoot.eachNode(function (node) {\r\n      newChildren.push(node);\r\n    });\r\n    var oldChildren = this._oldChildren || [];\r\n    dualTravel(newChildren, oldChildren);\r\n    renderRollUp(virtualRoot, newRoot);\r\n    this._initEvents();\r\n    this._oldChildren = newChildren;\r\n    function dualTravel(newChildren, oldChildren) {\r\n      if (newChildren.length === 0 && oldChildren.length === 0) {\r\n        return;\r\n      }\r\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\r\n      function getKey(node) {\r\n        return node.getId();\r\n      }\r\n      function processNode(newIdx, oldIdx) {\r\n        var newNode = newIdx == null ? null : newChildren[newIdx];\r\n        var oldNode = oldIdx == null ? null : oldChildren[oldIdx];\r\n        doRenderNode(newNode, oldNode);\r\n      }\r\n    }\r\n    function doRenderNode(newNode, oldNode) {\r\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\r\n        // Not render data with value 0\r\n        newNode = null;\r\n      }\r\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\r\n        if (oldNode && oldNode.piece) {\r\n          if (newNode) {\r\n            // Update\r\n            oldNode.piece.updateData(false, newNode, seriesModel, ecModel, api);\r\n            // For tooltip\r\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\r\n          } else {\r\n            // Remove\r\n            removeNode(oldNode);\r\n          }\r\n        } else if (newNode) {\r\n          // Add\r\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel, api);\r\n          group.add(piece);\r\n          // For tooltip\r\n          data.setItemGraphicEl(newNode.dataIndex, piece);\r\n        }\r\n      }\r\n    }\r\n    function removeNode(node) {\r\n      if (!node) {\r\n        return;\r\n      }\r\n      if (node.piece) {\r\n        group.remove(node.piece);\r\n        node.piece = null;\r\n      }\r\n    }\r\n    function renderRollUp(virtualRoot, viewRoot) {\r\n      if (viewRoot.depth > 0) {\r\n        // Render\r\n        if (self.virtualPiece) {\r\n          // Update\r\n          self.virtualPiece.updateData(false, virtualRoot, seriesModel, ecModel, api);\r\n        } else {\r\n          // Add\r\n          self.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel, api);\r\n          group.add(self.virtualPiece);\r\n        }\r\n        // TODO event scope\r\n        viewRoot.piece.off('click');\r\n        self.virtualPiece.on('click', function (e) {\r\n          self._rootToNode(viewRoot.parentNode);\r\n        });\r\n      } else if (self.virtualPiece) {\r\n        // Remove\r\n        group.remove(self.virtualPiece);\r\n        self.virtualPiece = null;\r\n      }\r\n    }\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n  SunburstView.prototype._initEvents = function () {\r\n    var _this = this;\r\n    this.group.off('click');\r\n    this.group.on('click', function (e) {\r\n      var targetFound = false;\r\n      var viewRoot = _this.seriesModel.getViewRoot();\r\n      viewRoot.eachNode(function (node) {\r\n        if (!targetFound && node.piece && node.piece === e.target) {\r\n          var nodeClick = node.getModel().get('nodeClick');\r\n          if (nodeClick === 'rootToNode') {\r\n            _this._rootToNode(node);\r\n          } else if (nodeClick === 'link') {\r\n            var itemModel = node.getModel();\r\n            var link = itemModel.get('link');\r\n            if (link) {\r\n              var linkTarget = itemModel.get('target', true) || '_blank';\r\n              windowOpen(link, linkTarget);\r\n            }\r\n          }\r\n          targetFound = true;\r\n        }\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * @private\r\n   */\r\n  SunburstView.prototype._rootToNode = function (node) {\r\n    if (node !== this.seriesModel.getViewRoot()) {\r\n      this.api.dispatchAction({\r\n        type: ROOT_TO_NODE_ACTION,\r\n        from: this.uid,\r\n        seriesId: this.seriesModel.id,\r\n        targetNode: node\r\n      });\r\n    }\r\n  };\r\n  /**\r\n   * @implement\r\n   */\r\n  SunburstView.prototype.containPoint = function (point, seriesModel) {\r\n    var treeRoot = seriesModel.getData();\r\n    var itemLayout = treeRoot.getItemLayout(0);\r\n    if (itemLayout) {\r\n      var dx = point[0] - itemLayout.cx;\r\n      var dy = point[1] - itemLayout.cy;\r\n      var radius = Math.sqrt(dx * dx + dy * dy);\r\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\r\n    }\r\n  };\r\n  SunburstView.type = 'sunburst';\r\n  return SunburstView;\r\n}(ChartView);\r\nexport default SunburstView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}