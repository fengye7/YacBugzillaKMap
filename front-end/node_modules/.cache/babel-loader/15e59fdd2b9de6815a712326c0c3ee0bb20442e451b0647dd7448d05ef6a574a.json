{"ast":null,"code":"/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\r\n * Creates an array that is the composition of partially applied arguments,\r\n * placeholders, and provided arguments into a single array of arguments.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to prepend to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n    argsLength = args.length,\n    holdersLength = holders.length,\n    leftIndex = -1,\n    leftLength = partials.length,\n    rangeLength = nativeMax(argsLength - holdersLength, 0),\n    result = Array(leftLength + rangeLength),\n    isUncurried = !isCurried;\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\nexport default composeArgs;","map":{"version":3,"names":["nativeMax","Math","max","composeArgs","args","partials","holders","isCurried","argsIndex","argsLength","length","holdersLength","leftIndex","leftLength","rangeLength","result","Array","isUncurried"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/_composeArgs.js"],"sourcesContent":["/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * Creates an array that is the composition of partially applied arguments,\r\n * placeholders, and provided arguments into a single array of arguments.\r\n *\r\n * @private\r\n * @param {Array} args The provided arguments.\r\n * @param {Array} partials The arguments to prepend to those provided.\r\n * @param {Array} holders The `partials` placeholder indexes.\r\n * @params {boolean} [isCurried] Specify composing for a curried function.\r\n * @returns {Array} Returns the new array of composed arguments.\r\n */\r\nfunction composeArgs(args, partials, holders, isCurried) {\r\n  var argsIndex = -1,\r\n      argsLength = args.length,\r\n      holdersLength = holders.length,\r\n      leftIndex = -1,\r\n      leftLength = partials.length,\r\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\r\n      result = Array(leftLength + rangeLength),\r\n      isUncurried = !isCurried;\r\n\r\n  while (++leftIndex < leftLength) {\r\n    result[leftIndex] = partials[leftIndex];\r\n  }\r\n  while (++argsIndex < holdersLength) {\r\n    if (isUncurried || argsIndex < argsLength) {\r\n      result[holders[argsIndex]] = args[argsIndex];\r\n    }\r\n  }\r\n  while (rangeLength--) {\r\n    result[leftIndex++] = args[argsIndex++];\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default composeArgs;\r\n"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAGC,IAAI,CAACC,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,SAAS,EAAE;EACvD,IAAIC,SAAS,GAAG,CAAC,CAAC;IACdC,UAAU,GAAGL,IAAI,CAACM,MAAM;IACxBC,aAAa,GAAGL,OAAO,CAACI,MAAM;IAC9BE,SAAS,GAAG,CAAC,CAAC;IACdC,UAAU,GAAGR,QAAQ,CAACK,MAAM;IAC5BI,WAAW,GAAGd,SAAS,CAACS,UAAU,GAAGE,aAAa,EAAE,CAAC,CAAC;IACtDI,MAAM,GAAGC,KAAK,CAACH,UAAU,GAAGC,WAAW,CAAC;IACxCG,WAAW,GAAG,CAACV,SAAS;EAE5B,OAAO,EAAEK,SAAS,GAAGC,UAAU,EAAE;IAC/BE,MAAM,CAACH,SAAS,CAAC,GAAGP,QAAQ,CAACO,SAAS,CAAC;EACzC;EACA,OAAO,EAAEJ,SAAS,GAAGG,aAAa,EAAE;IAClC,IAAIM,WAAW,IAAIT,SAAS,GAAGC,UAAU,EAAE;MACzCM,MAAM,CAACT,OAAO,CAACE,SAAS,CAAC,CAAC,GAAGJ,IAAI,CAACI,SAAS,CAAC;IAC9C;EACF;EACA,OAAOM,WAAW,EAAE,EAAE;IACpBC,MAAM,CAACH,SAAS,EAAE,CAAC,GAAGR,IAAI,CAACI,SAAS,EAAE,CAAC;EACzC;EACA,OAAOO,MAAM;AACf;AAEA,eAAeZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}