{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { onMounted, ref } from \"vue\";\nimport { expendNodes } from \"./mock\";\nexport default {\n  __name: 'KMapCharts',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    require(\"echarts/lib/chart/graph\");\n    require(\"echarts/lib/component/tooltip\");\n    require(\"echarts/lib/component/title\");\n    let KMapChart = null;\n    const seriesData = ref([]);\n    const seriesLinks = ref([]);\n    const categories = ref([]);\n    const lastClickId = ref(\"\");\n    const colors = [\"#a3d2ca\", \"#056676\", \"#ea2c62\", \"#16a596\", \"#03c4a1\", \"#f5a25d\", \"#8CD282\", \"#32e0c4\", \"#00FAE1\", \"#f05454\"];\n    onMounted(() => {\n      formatData(expendNodes);\n      initKMapChart();\n    });\n\n    /**\r\n     * 节点点击事件\r\n     */\n    async function nodeClick(params) {\n      const index = seriesData.value.findIndex(item => item.id === params.data.id);\n      console.log('点了节点：' + (index + 1), \"clicked\");\n    }\n    function initKMapChart() {\n      if (!KMapChart) {\n        KMapChart = echarts.init(document.getElementById(\"KMapChart\"));\n        KMapChart.on(\"click\", params => {\n          if (params.dataType === \"node\") {\n            nodeClick(params);\n          }\n        });\n      }\n      let option = {\n        animationDurationUpdate: 500,\n        animationEasingUpdate: \"quinticInOut\",\n        tooltip: {\n          show: false\n        },\n        series: [{\n          type: \"graph\",\n          layout: \"force\",\n          legendHoverLink: true,\n          hoverAnimation: true,\n          focusNodeAdjacency: true,\n          edgeLabel: {\n            position: \"middle\",\n            normal: {\n              show: true,\n              textStyle: {\n                fontSize: 12\n              },\n              position: \"middle\",\n              formatter: function (x) {\n                return x.data.name;\n              }\n            }\n          },\n          edgeSymbol: [\"\", \"arrow\"],\n          force: {\n            edgeLength: 15,\n            repulsion: 200\n          },\n          roam: true,\n          draggable: true,\n          itemStyle: {\n            normal: {\n              color: \"#00FAE1\",\n              cursor: \"pointer\",\n              label: {\n                show: true,\n                position: [-10, -15],\n                textStyle: {\n                  color: \"#fff\",\n                  fontStyle: \"normal\",\n                  fontWeight: \"bold\",\n                  fontFamily: \"sans-serif\",\n                  fontSize: 12\n                }\n              },\n              nodeStyle: {\n                brushType: \"both\",\n                borderColor: \"rgba(255,215,0,0.4)\",\n                borderWidth: 1\n              }\n            },\n            emphasis: {\n              shadowColor: \"#00FAE1\",\n              shadowOffsetX: 0,\n              shadowOffsetY: 0,\n              shadowBlur: 40\n            }\n          },\n          lineStyle: {\n            width: 2\n          },\n          label: {\n            fontSize: 18\n          },\n          symbolSize: 24,\n          links: seriesLinks.value,\n          data: seriesData.value,\n          categories: categories.value,\n          cursor: \"pointer\"\n        }]\n      };\n      // 使用刚指定的配置项和数据显示图表。\n      KMapChart.setOption(option);\n    }\n\n    /**\r\n     * 格式化数据到表格需要的数据\r\n     */\n    function formatData(list) {\n      let nodes = list.seriesData;\n      seriesData.value = [];\n      seriesLinks.value = [];\n      let colorIndex = 0;\n      let data = [];\n      let loadedCat = [];\n      nodes.forEach(item => {\n        if (item.categary && loadedCat.indexOf(item.categary) === -1) {\n          colorIndex = Math.floor(Math.random() * colors.length);\n          loadedCat.push(item.categary);\n          categories.value.push({\n            name: item.categary\n          });\n        }\n        item.itemStyle = {\n          color: colors[colorIndex],\n          borderColor: \"#ffffff\"\n        };\n        data.push(item);\n      });\n      seriesData.value.push(...data);\n      seriesLinks.value.push(...list.linksData);\n    }\n    const __returned__ = {\n      get KMapChart() {\n        return KMapChart;\n      },\n      set KMapChart(v) {\n        KMapChart = v;\n      },\n      seriesData,\n      seriesLinks,\n      categories,\n      lastClickId,\n      colors,\n      nodeClick,\n      initKMapChart,\n      formatData,\n      get echarts() {\n        return echarts;\n      },\n      onMounted,\n      ref,\n      get expendNodes() {\n        return expendNodes;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","onMounted","ref","expendNodes","require","KMapChart","seriesData","seriesLinks","categories","lastClickId","colors","formatData","initKMapChart","nodeClick","params","index","value","findIndex","item","id","data","console","log","init","document","getElementById","on","dataType","option","animationDurationUpdate","animationEasingUpdate","tooltip","show","series","type","layout","legendHoverLink","hoverAnimation","focusNodeAdjacency","edgeLabel","position","normal","textStyle","fontSize","formatter","x","name","edgeSymbol","force","edgeLength","repulsion","roam","draggable","itemStyle","color","cursor","label","fontStyle","fontWeight","fontFamily","nodeStyle","brushType","borderColor","borderWidth","emphasis","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","lineStyle","width","symbolSize","links","setOption","list","nodes","colorIndex","loadedCat","forEach","categary","indexOf","Math","floor","random","length","push","linksData"],"sources":["D:/Files/Code/CoursesProjects/YacBugzilla_KnowledgeMap/front-end/src/components/KMapCharts.vue"],"sourcesContent":["<template>\r\n  <div id=\"KMapChart\" class=\"KMapChart\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { onMounted, ref } from \"vue\";\r\nimport { expendNodes } from \"./mock\";\r\nrequire(\"echarts/lib/chart/graph\");\r\nrequire(\"echarts/lib/component/tooltip\");\r\nrequire(\"echarts/lib/component/title\");\r\n\r\nlet KMapChart = null;\r\nconst seriesData = ref([]);\r\nconst seriesLinks = ref([]);\r\nconst categories = ref([]);\r\nconst lastClickId = ref(\"\");\r\nconst colors = [\r\n  \"#a3d2ca\",\r\n  \"#056676\",\r\n  \"#ea2c62\",\r\n  \"#16a596\",\r\n  \"#03c4a1\",\r\n  \"#f5a25d\",\r\n  \"#8CD282\",\r\n  \"#32e0c4\",\r\n  \"#00FAE1\",\r\n  \"#f05454\"\r\n];\r\n\r\nonMounted(() => {\r\n  formatData(expendNodes);\r\n  initKMapChart();\r\n});\r\n\r\n/**\r\n * 节点点击事件\r\n */\r\nasync function nodeClick(params) {\r\n  const index = seriesData.value.findIndex((item) => item.id === params.data.id);\r\n  console.log('点了节点：' + (index + 1), \"clicked\");\r\n}\r\n\r\nfunction initKMapChart() {\r\n  if (!KMapChart) {\r\n    KMapChart = echarts.init(document.getElementById(\"KMapChart\"));\r\n    KMapChart.on(\"click\", (params) => {\r\n      if (params.dataType === \"node\") {\r\n        nodeClick(params);\r\n      }\r\n    });\r\n  }\r\n\r\n  let option = {\r\n    animationDurationUpdate: 500,\r\n    animationEasingUpdate: \"quinticInOut\",\r\n    tooltip: {\r\n      show: false\r\n    },\r\n    series: [\r\n      {\r\n        type: \"graph\",\r\n        layout: \"force\",\r\n        legendHoverLink: true,\r\n        hoverAnimation: true,\r\n        focusNodeAdjacency: true,\r\n        edgeLabel: {\r\n          position: \"middle\",\r\n          normal: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 12\r\n            },\r\n            position: \"middle\",\r\n            formatter: function (x) {\r\n              return x.data.name;\r\n            }\r\n          }\r\n        },\r\n        edgeSymbol: [\"\", \"arrow\"],\r\n        force: {\r\n          edgeLength: 15,\r\n          repulsion: 200\r\n        },\r\n        roam: true,\r\n        draggable: true,\r\n        itemStyle: {\r\n          normal: {\r\n            color: \"#00FAE1\",\r\n            cursor: \"pointer\",\r\n            label: {\r\n              show: true,\r\n              position: [-10, -15],\r\n              textStyle: {\r\n                color: \"#fff\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"sans-serif\",\r\n                fontSize: 12\r\n              }\r\n            },\r\n            nodeStyle: {\r\n              brushType: \"both\",\r\n              borderColor: \"rgba(255,215,0,0.4)\",\r\n              borderWidth: 1\r\n            }\r\n          },\r\n          emphasis: {\r\n            shadowColor: \"#00FAE1\",\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n            shadowBlur: 40\r\n          }\r\n        },\r\n        lineStyle: {\r\n          width: 2\r\n        },\r\n        label: {\r\n          fontSize: 18\r\n        },\r\n        symbolSize: 24,\r\n        links: seriesLinks.value,\r\n        data: seriesData.value,\r\n        categories: categories.value,\r\n        cursor: \"pointer\"\r\n      }\r\n    ]\r\n  };\r\n// 使用刚指定的配置项和数据显示图表。\r\n  KMapChart.setOption(option);\r\n}\r\n\r\n    /**\r\n     * 格式化数据到表格需要的数据\r\n     */\r\nfunction formatData(list) {\r\n  let nodes = list.seriesData;\r\n  seriesData.value = [];\r\n  seriesLinks.value = [];\r\n  let colorIndex = 0;\r\n  let data = [];\r\n  let loadedCat = [];\r\n  nodes.forEach((item) => {\r\n    if (item.categary && loadedCat.indexOf(item.categary) === -1) {\r\n      colorIndex = Math.floor(Math.random() * colors.length);\r\n      loadedCat.push(item.categary);\r\n      categories.value.push({ name: item.categary });\r\n    }\r\n    item.itemStyle = {\r\n      color: colors[colorIndex],\r\n      borderColor: \"#ffffff\"\r\n    };\r\n    data.push(item);\r\n  });\r\n  seriesData.value.push(...data);\r\n  seriesLinks.value.push(...list.linksData);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}