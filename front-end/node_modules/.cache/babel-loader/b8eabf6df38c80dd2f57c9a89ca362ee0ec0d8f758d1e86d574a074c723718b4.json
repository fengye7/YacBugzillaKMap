{"ast":null,"code":"import * as echarts from \"echarts\";\nimport { ref, onMounted, watch } from \"vue\";\nexport default {\n  __name: 'DataStatistics',\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    xAxisDataKey: {\n      type: String,\n      default: 'date'\n    },\n    yAxisDataKey: {\n      type: String,\n      default: 'value'\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const props = __props;\n    const chartRef = ref(null);\n    onMounted(() => {\n      initChart();\n    });\n    watch(() => props.data, () => {\n      if (chart) {\n        chart.setOption(getOption());\n      }\n    }, {\n      deep: true\n    });\n    let chart;\n    const getOption = () => {\n      return {\n        xAxis: {\n          type: 'category',\n          data: props.data.map(item => item[props.xAxisDataKey])\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: props.data.map(item => item[props.yAxisDataKey]),\n          type: 'line'\n        }]\n      };\n    };\n    const initChart = () => {\n      chart = echarts.init(chartRef.value);\n      chart.setOption(getOption());\n    };\n    const __returned__ = {\n      props,\n      chartRef,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      getOption,\n      initChart,\n      get echarts() {\n        return echarts;\n      },\n      ref,\n      onMounted,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","ref","onMounted","watch","props","__props","chartRef","initChart","data","chart","setOption","getOption","deep","xAxis","type","map","item","xAxisDataKey","yAxis","series","yAxisDataKey","init","value"],"sources":["D:/code/bugzilla/527/front-end/src/components/DataStatistics.vue"],"sourcesContent":["<template>\r\n    <div ref=\"chartRef\" :style=\"{ width: '100%', height: '400px' }\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { defineProps, ref, onMounted, watch } from \"vue\";\r\n\r\nconst props = defineProps({\r\n    data: {\r\n        type: Array,\r\n        required: true\r\n    },\r\n    xAxisDataKey: {\r\n        type: String,\r\n        default: 'date'\r\n    },\r\n    yAxisDataKey: {\r\n        type: String,\r\n        default: 'value'\r\n    }\r\n});\r\n\r\nconst chartRef = ref(null);\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nlet chart;\r\n\r\nconst getOption = () => {\r\n    return {\r\n        xAxis: {\r\n            type: 'category',\r\n            data: props.data.map(item => item[props.xAxisDataKey])\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        series: [\r\n            {\r\n                data: props.data.map(item => item[props.yAxisDataKey]),\r\n                type: 'line'\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\nconst initChart = () => {\r\n    chart = echarts.init(chartRef.value);\r\n    chart.setOption(getOption());\r\n};\r\n\r\n</script>\r\n\r\n<!-- <script>\r\nimport * as echarts from \"echarts\";\r\nimport { onMounted, onUnmounted } from \"vue\";\r\n\r\nexport default {\r\n    name: \"App\",\r\n    props: [\"width\", \"height\"],\r\n    setup() {\r\n        let myEcharts = echarts;\r\n\r\n        onMounted(() => {\r\n            initChart();\r\n        });\r\n\r\n        onUnmounted(() => {\r\n            myEcharts.dispose;\r\n        });\r\n\r\n        function initChart() {\r\n            let chart = myEcharts.init(document.getElementById(\"myEcharts\"), \"purple-passion\");\r\n            chart.setOption({\r\n                color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\r\n                title: {\r\n                    text: '标题'\r\n                },\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        type: 'cross',\r\n                        label: {\r\n                            backgroundColor: '#6a7985'\r\n                        }\r\n                    }\r\n                },\r\n                legend: {\r\n                    data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5']\r\n                },\r\n                toolbox: {\r\n                    feature: {\r\n                        saveAsImage: {}\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value'\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: 'Line 1',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(128, 255, 165)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(1, 191, 236)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [140, 232, 101, 264, 90, 340, 250]\r\n                    },\r\n                    {\r\n                        name: 'Line 2',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(0, 221, 255)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(77, 119, 255)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [120, 282, 111, 234, 220, 340, 310]\r\n                    },\r\n                    {\r\n                        name: 'Line 3',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(55, 162, 255)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(116, 21, 219)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [320, 132, 201, 334, 190, 130, 220]\r\n                    },\r\n                    {\r\n                        name: 'Line 4',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(255, 0, 135)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(135, 0, 157)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [220, 402, 231, 134, 190, 230, 120]\r\n                    },\r\n                    {\r\n                        name: 'Line 5',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top'\r\n                        },\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(255, 191, 0)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(224, 62, 76)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [220, 302, 181, 234, 210, 290, 150]\r\n                    }\r\n                ]\r\n            });\r\n            window.onresize = function () {\r\n                chart.resize();\r\n            };\r\n        }\r\n\r\n        return {\r\n            initChart\r\n        };\r\n    }\r\n};\r\n</script> -->\r\n"],"mappings":"AAKA,OAAO,KAAKA,OAAO,MAAM,SAAS;AAClC,SAAsBC,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;;;;;;;;;;;;;;;;;;;;;IAExD,MAAMC,KAAK,GAAGC,OAaZ;IAEF,MAAMC,QAAQ,GAAGL,GAAG,CAAC,IAAI,CAAC;IAE1BC,SAAS,CAAC,MAAM;MACZK,SAAS,CAAC,CAAC;IACf,CAAC,CAAC;IAEFJ,KAAK,CACD,MAAMC,KAAK,CAACI,IAAI,EAChB,MAAM;MACF,IAAIC,KAAK,EAAE;QACPA,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;MAChC;IACJ,CAAC,EACD;MAAEC,IAAI,EAAE;IAAK,CACjB,CAAC;IAED,IAAIH,KAAK;IAET,MAAME,SAAS,GAAGA,CAAA,KAAM;MACpB,OAAO;QACHE,KAAK,EAAE;UACHC,IAAI,EAAE,UAAU;UAChBN,IAAI,EAAEJ,KAAK,CAACI,IAAI,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACZ,KAAK,CAACa,YAAY,CAAC;QACzD,CAAC;QACDC,KAAK,EAAE;UACHJ,IAAI,EAAE;QACV,CAAC;QACDK,MAAM,EAAE,CACJ;UACIX,IAAI,EAAEJ,KAAK,CAACI,IAAI,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACZ,KAAK,CAACgB,YAAY,CAAC,CAAC;UACtDN,IAAI,EAAE;QACV,CAAC;MAET,CAAC;IACL,CAAC;IAED,MAAMP,SAAS,GAAGA,CAAA,KAAM;MACpBE,KAAK,GAAGT,OAAO,CAACqB,IAAI,CAACf,QAAQ,CAACgB,KAAK,CAAC;MACpCb,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;IAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}