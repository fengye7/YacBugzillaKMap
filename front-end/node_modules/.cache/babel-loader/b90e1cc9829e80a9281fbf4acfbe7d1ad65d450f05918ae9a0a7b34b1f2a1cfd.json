{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { ref, onMounted } from \"vue\";\n// import { defineProps, ref, onMounted, watch } from \"vue\";\nimport axios from 'axios';\nexport default {\n  __name: 'BarChart',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    let chart;\n\n    //axios\n    const sev = ref(null);\n    const chartRef = ref(null);\n    var option = {\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          // Use axis to trigger tooltip\n          type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n        }\n      },\n      legend: {},\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'value'\n      },\n      yAxis: {\n        type: 'category',\n        data: chartRef.value\n      },\n      series: [\n        // {\n        //     name: 'Direct',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [320, 302, 301, 334, 390, 330, 320]\n        // },\n        // {\n        //     name: 'Mail Ad',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [120, 132, 101, 134, 90, 230, 210]\n        // },\n        // {\n        //     name: 'Affiliate Ad',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [220, 182, 191, 234, 290, 330, 310]\n        // },\n        // {\n        //     name: 'Video Ad',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [150, 212, 201, 154, 190, 330, 410]\n        // },\n        // {\n        //     name: 'Search Engine',\n        //     type: 'bar',\n        //     stack: 'total',\n        //     label: {\n        //         show: true\n        //     },\n        //     emphasis: {\n        //         focus: 'series'\n        //     },\n        //     data: [820, 832, 901, 934, 1290, 1330, 1320]\n        // }\n      ]\n    };\n    let baseUrl = 'http://47.120.41.97:8002/bugs/';\n    const fetchRef = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'statuses');\n        // chartRef = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        if (chart) {\n          chart.setOption(getOption());\n        }\n        console.log('chartRefvalue', chartRef.value);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchSev = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'severity');\n        // sev = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n\n        console.log('severity', sev);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const fetchData = async () => {\n      // for (var sta in chartRef.value) {\n      await fetchRef();\n      await fetchSev();\n      for (var i = 0; i < chartRef.value.length; i++) {\n        option.series.push({\n          name: chartRef.value[i],\n          type: 'bar',\n          stack: 'total',\n          label: {\n            show: true\n          },\n          emphasis: {\n            focus: 'series'\n          },\n          data: []\n        });\n        console.log(chartRef.value[i]);\n        console.log('option.series', option.series);\n        for (var j = 0; j < sev.value.length; j++) {\n          await axios.get(baseUrl + 'severityStatusCount', {\n            params: {\n              status: chartRef.value[i],\n              severity: sev.value[j]\n            }\n          }).then(response => {\n            console.log(response.data);\n            // 处理成功的情况\n            option.series[option.series].data.push(response.data.count);\n          }).catch(error => {\n            // 处理错误情况\n            console.error('Error fetching data:', error);\n          });\n        }\n      }\n      if (chart) {\n        chart.setOption(getOption());\n      }\n    };\n    onMounted(() => {\n      initChart();\n    });\n    const getOption = () => {\n      return option;\n    };\n    const initChart = () => {\n      // fetchRef();\n      // console.log('a')\n      // fetchSev();\n      // console.log('d')\n      fetchData();\n      console.log('e');\n      chart = echarts.init(chartRef.value);\n      console.log('b');\n      chart.setOption(getOption());\n      console.log('c');\n    };\n    const __returned__ = {\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      sev,\n      chartRef,\n      get option() {\n        return option;\n      },\n      set option(v) {\n        option = v;\n      },\n      get baseUrl() {\n        return baseUrl;\n      },\n      set baseUrl(v) {\n        baseUrl = v;\n      },\n      fetchRef,\n      fetchSev,\n      fetchData,\n      getOption,\n      initChart,\n      get echarts() {\n        return echarts;\n      },\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","ref","onMounted","axios","chart","sev","chartRef","option","tooltip","trigger","axisPointer","type","legend","grid","left","right","bottom","containLabel","xAxis","yAxis","data","value","series","baseUrl","fetchRef","response","get","setOption","getOption","console","log","error","fetchSev","fetchData","i","length","push","name","stack","label","show","emphasis","focus","j","params","status","severity","then","count","catch","initChart","init"],"sources":["D:/code/bugzilla/527/front-end/src/components/BarChart.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <div ref=\"chartRef\" :style=\"{ width: '1000%', height: '600%' }\"></div>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { ref, onMounted } from \"vue\";\r\n// import { defineProps, ref, onMounted, watch } from \"vue\";\r\nimport axios from 'axios';\r\n\r\nlet chart;\r\n\r\n//axios\r\nconst sev = ref(null);\r\nconst chartRef = ref(null);\r\nvar option = {\r\n    tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: {\r\n            // Use axis to trigger tooltip\r\n            type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\r\n        }\r\n    },\r\n    legend: {},\r\n    grid: {\r\n        left: '3%',\r\n        right: '4%',\r\n        bottom: '3%',\r\n        containLabel: true\r\n    },\r\n    xAxis: {\r\n        type: 'value'\r\n    },\r\n    yAxis: {\r\n        type: 'category',\r\n        data: chartRef.value\r\n    },\r\n    series: [\r\n        // {\r\n        //     name: 'Direct',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [320, 302, 301, 334, 390, 330, 320]\r\n        // },\r\n        // {\r\n        //     name: 'Mail Ad',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [120, 132, 101, 134, 90, 230, 210]\r\n        // },\r\n        // {\r\n        //     name: 'Affiliate Ad',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [220, 182, 191, 234, 290, 330, 310]\r\n        // },\r\n        // {\r\n        //     name: 'Video Ad',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [150, 212, 201, 154, 190, 330, 410]\r\n        // },\r\n        // {\r\n        //     name: 'Search Engine',\r\n        //     type: 'bar',\r\n        //     stack: 'total',\r\n        //     label: {\r\n        //         show: true\r\n        //     },\r\n        //     emphasis: {\r\n        //         focus: 'series'\r\n        //     },\r\n        //     data: [820, 832, 901, 934, 1290, 1330, 1320]\r\n        // }\r\n    ]\r\n};\r\n\r\nlet baseUrl = 'http://47.120.41.97:8002/bugs/'\r\n\r\nconst fetchRef = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'statuses');\r\n        // chartRef = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        chartRef.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n\r\n        console.log('chartRefvalue', chartRef.value)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchSev = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'severity');\r\n        // sev = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        sev.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n\r\n        console.log('severity', sev)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst fetchData = async () => {\r\n    // for (var sta in chartRef.value) {\r\n        await fetchRef();\r\n        await fetchSev();\r\n\r\n    for (var i = 0; i < chartRef.value.length; i++) {\r\n        option.series.push({\r\n            name: chartRef.value[i],\r\n            type: 'bar',\r\n            stack: 'total',\r\n            label: { show: true },\r\n            emphasis: { focus: 'series' },\r\n            data: []\r\n        });\r\n        console.log(chartRef.value[i])\r\n        console.log('option.series', option.series)\r\n        for (var j = 0; j < sev.value.length; j++) {\r\n            await axios.get(baseUrl + 'severityStatusCount', {\r\n                params: {\r\n                    status: chartRef.value[i],\r\n                    severity: sev.value[j],\r\n                }\r\n            }).then(response => {\r\n                console.log(response.data);\r\n                // 处理成功的情况\r\n                option.series[option.series].data.push(response.data.count);\r\n\r\n            })\r\n                .catch(error => {\r\n                    // 处理错误情况\r\n                    console.error('Error fetching data:', error);\r\n                });\r\n        }\r\n    }\r\n\r\n    if (chart) {\r\n        chart.setOption(getOption());\r\n    }\r\n};\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nconst getOption = () => {\r\n    return option;\r\n};\r\n\r\nconst initChart = () => {\r\n    \r\n    // fetchRef();\r\n    // console.log('a')\r\n    // fetchSev();\r\n    // console.log('d')\r\n    fetchData();\r\n    console.log('e')\r\n    chart = echarts.init(chartRef.value);\r\n    console.log('b')\r\n    chart.setOption(getOption());\r\n    console.log('c')\r\n};\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}