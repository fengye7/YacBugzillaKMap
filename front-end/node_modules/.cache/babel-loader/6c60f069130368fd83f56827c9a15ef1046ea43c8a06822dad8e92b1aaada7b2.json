{"ast":null,"code":"import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n  COMPARE_UNORDERED_FLAG = 2;\n\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\nexport default baseMatchesProperty;","map":{"version":3,"names":["baseIsEqual","get","hasIn","isKey","isStrictComparable","matchesStrictComparable","toKey","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","object","objValue","undefined"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/_baseMatchesProperty.js"],"sourcesContent":["import baseIsEqual from './_baseIsEqual.js';\r\nimport get from './get.js';\r\nimport hasIn from './hasIn.js';\r\nimport isKey from './_isKey.js';\r\nimport isStrictComparable from './_isStrictComparable.js';\r\nimport matchesStrictComparable from './_matchesStrictComparable.js';\r\nimport toKey from './_toKey.js';\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatchesProperty(path, srcValue) {\r\n  if (isKey(path) && isStrictComparable(srcValue)) {\r\n    return matchesStrictComparable(toKey(path), srcValue);\r\n  }\r\n  return function(object) {\r\n    var objValue = get(object, path);\r\n    return (objValue === undefined && objValue === srcValue)\r\n      ? hasIn(object, path)\r\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\r\n  };\r\n}\r\n\r\nexport default baseMatchesProperty;\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,kBAAkB,MAAM,0BAA0B;AACzD,OAAOC,uBAAuB,MAAM,+BAA+B;AACnE,OAAOC,KAAK,MAAM,aAAa;;AAE/B;AACA,IAAIC,oBAAoB,GAAG,CAAC;EACxBC,sBAAsB,GAAG,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,mBAAmBA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAC3C,IAAIR,KAAK,CAACO,IAAI,CAAC,IAAIN,kBAAkB,CAACO,QAAQ,CAAC,EAAE;IAC/C,OAAON,uBAAuB,CAACC,KAAK,CAACI,IAAI,CAAC,EAAEC,QAAQ,CAAC;EACvD;EACA,OAAO,UAASC,MAAM,EAAE;IACtB,IAAIC,QAAQ,GAAGZ,GAAG,CAACW,MAAM,EAAEF,IAAI,CAAC;IAChC,OAAQG,QAAQ,KAAKC,SAAS,IAAID,QAAQ,KAAKF,QAAQ,GACnDT,KAAK,CAACU,MAAM,EAAEF,IAAI,CAAC,GACnBV,WAAW,CAACW,QAAQ,EAAEE,QAAQ,EAAEN,oBAAoB,GAAGC,sBAAsB,CAAC;EACpF,CAAC;AACH;AAEA,eAAeC,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}