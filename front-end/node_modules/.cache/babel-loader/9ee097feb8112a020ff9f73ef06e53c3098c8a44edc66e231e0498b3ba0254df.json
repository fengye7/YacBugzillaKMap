{"ast":null,"code":"import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/**\r\n * Creates a slice of `array` from `start` up to, but not including, `end`.\r\n *\r\n * **Note:** This method is used instead of\r\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\r\n * returned.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to slice.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\nfunction slice(array, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n    start = 0;\n    end = length;\n  } else {\n    start = start == null ? 0 : toInteger(start);\n    end = end === undefined ? length : toInteger(end);\n  }\n  return baseSlice(array, start, end);\n}\nexport default slice;","map":{"version":3,"names":["baseSlice","isIterateeCall","toInteger","slice","array","start","end","length","undefined"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/slice.js"],"sourcesContent":["import baseSlice from './_baseSlice.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Creates a slice of `array` from `start` up to, but not including, `end`.\r\n *\r\n * **Note:** This method is used instead of\r\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\r\n * returned.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category Array\r\n * @param {Array} array The array to slice.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns the slice of `array`.\r\n */\r\nfunction slice(array, start, end) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\r\n    start = 0;\r\n    end = length;\r\n  }\r\n  else {\r\n    start = start == null ? 0 : toInteger(start);\r\n    end = end === undefined ? length : toInteger(end);\r\n  }\r\n  return baseSlice(array, start, end);\r\n}\r\n\r\nexport default slice;\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,iBAAiB;AACvC,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAE;EAChC,IAAIC,MAAM,GAAGH,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACG,MAAM;EAC7C,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,EAAE;EACX;EACA,IAAID,GAAG,IAAI,OAAOA,GAAG,IAAI,QAAQ,IAAIL,cAAc,CAACG,KAAK,EAAEC,KAAK,EAAEC,GAAG,CAAC,EAAE;IACtED,KAAK,GAAG,CAAC;IACTC,GAAG,GAAGC,MAAM;EACd,CAAC,MACI;IACHF,KAAK,GAAGA,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGH,SAAS,CAACG,KAAK,CAAC;IAC5CC,GAAG,GAAGA,GAAG,KAAKE,SAAS,GAAGD,MAAM,GAAGL,SAAS,CAACI,GAAG,CAAC;EACnD;EACA,OAAON,SAAS,CAACI,KAAK,EAAEC,KAAK,EAAEC,GAAG,CAAC;AACrC;AAEA,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}