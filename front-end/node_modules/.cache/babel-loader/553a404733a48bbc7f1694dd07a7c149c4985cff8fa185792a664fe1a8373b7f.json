{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6a1c0054\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"KMapChart\",\n  class: \"k-map-chart\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_container = _resolveComponent(\"el-container\");\n  return _openBlock(), _createBlock(_component_el_container, null, {\n    default: _withCtx(() => [_hoisted_1, _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $setup.fetchData\n    }, \"Fetch Data\"), $setup.testdata ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, _toDisplayString($setup.testdata), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","id","class","key","_createBlock","_component_el_container","default","_withCtx","_hoisted_1","onClick","$setup","fetchData","testdata","_createElementBlock","_hoisted_2","_toDisplayString","_createCommentVNode","_"],"sources":["D:\\Files\\Code\\CoursesProjects\\YacBugzilla_KnowledgeMap\\front-end\\src\\components\\KMapCharts.vue"],"sourcesContent":["<template>\r\n  <el-container>\r\n    <div id=\"KMapChart\" class=\"k-map-chart\"></div>\r\n    <div>\r\n      <button @click=\"fetchData\">Fetch Data</button>\r\n      <div v-if=\"testdata\">\r\n        <p>{{ testdata }}</p>\r\n      </div>\r\n    </div>\r\n  </el-container>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref } from 'vue';\r\nimport * as echarts from 'echarts';\r\nimport 'echarts/lib/chart/graph';\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\n\r\n\r\nlet KMapChart = null;\r\nlet kMapData = {};\r\nconst seriesData = ref([]);\r\nconst seriesLinks = ref([]);\r\nconst categories = ref([]);\r\nconst testdata = ref(null);\r\n\r\nconst colors = [\r\n  \"#a3d2ca\", \"#056676\", \"#ea2c62\", \"#16a596\", \"#03c4a1\",\r\n  \"#f5a25d\", \"#8CD282\", \"#32e0c4\", \"#00FAE1\", \"#f05454\"\r\n];\r\n\r\nonMounted(async () => {\r\n  await fetchData();\r\n  formatData(kMapData);\r\n  initKMapChart();\r\n});\r\n\r\nasync function fetchData() {\r\n  try {\r\n    const data = await fetch('http://127.0.0.1:8000/bugs/k-map-data/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'accept': 'application/json',\r\n        'X-CSRFToken': 'SefV0fahdjtPu3u5ycuda9wAVMd7L9TJ3PygsawVMfdvQig5KndvjJmQjShhPFre'\r\n      }\r\n    });\r\n    kMapData = data;\r\n    testdata.value = data;\r\n  } catch (error) {\r\n    console.error('Error fetching data:', error);\r\n  }\r\n}\r\n\r\nfunction formatData(list) {\r\n  let nodes = list.nodes;\r\n  let links = list.links;\r\n\r\n  let colorIndex = 0;\r\n  let loadedCat = [];\r\n  nodes.forEach((item) => {\r\n    if (item.category && !loadedCat.includes(item.category)) {\r\n      colorIndex = Math.floor(Math.random() * colors.length);\r\n      loadedCat.push(item.category);\r\n      categories.value.push({ name: item.category });\r\n    }\r\n    item.itemStyle = {\r\n      color: colors[colorIndex],\r\n      borderColor: '#ffffff',\r\n    };\r\n    seriesData.value.push(item);\r\n  });\r\n\r\n  links.forEach((item) => {\r\n    seriesLinks.value.push({\r\n      source: item.source,\r\n      target: item.target,\r\n      name: item.relationship,\r\n    });\r\n  });\r\n}\r\n\r\nfunction initKMapChart() {\r\n  if (!KMapChart) {\r\n    KMapChart = echarts.init(document.getElementById('KMapChart'));\r\n    KMapChart.on('click', (params) => {\r\n      if (params.dataType === 'node') {\r\n        nodeClick(params);\r\n      }\r\n    });\r\n  }\r\n\r\n  const option = {\r\n    animationDurationUpdate: 500,\r\n    animationEasingUpdate: 'quinticInOut',\r\n    tooltip: {\r\n      show: true,\r\n      formatter: (params) => {\r\n        if (params.dataType === 'node') {\r\n          return params.data.name;\r\n        } else if (params.dataType === 'edge') {\r\n          return params.data.name;\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: 'graph',\r\n        layout: 'force',\r\n        legendHoverLink: true,\r\n        hoverAnimation: true,\r\n        focusNodeAdjacency: true,\r\n        edgeLabel: {\r\n          show: true,\r\n          position: 'middle',\r\n          formatter: '{c}'\r\n        },\r\n        edgeSymbol: ['none', 'arrow'],\r\n        force: {\r\n          edgeLength: 60,\r\n          repulsion: 100,\r\n        },\r\n        roam: true,\r\n        draggable: true,\r\n        itemStyle: {\r\n          normal: {\r\n            color: '#00FAE1',\r\n            cursor: 'pointer',\r\n            label: {\r\n              show: true,\r\n              position: [-10, -15],\r\n              textStyle: {\r\n                color: '#AB8',\r\n                fontStyle: 'normal',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'sans-serif',\r\n                fontSize: 12,\r\n              }\r\n            },\r\n            nodeStyle: {\r\n              brushType: 'both',\r\n              borderColor: 'rgba(255,215,0,0.4)',\r\n              borderWidth: 1,\r\n            }\r\n          },\r\n          emphasis: {\r\n            shadowColor: '#00FAE1',\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n            shadowBlur: 40,\r\n          }\r\n        },\r\n        lineStyle: {\r\n          width: 2,\r\n        },\r\n        label: {\r\n          fontSize: 18,\r\n        },\r\n        symbolSize: 24,\r\n        links: seriesLinks.value,\r\n        data: seriesData.value,\r\n        categories: categories.value,\r\n        cursor: 'pointer',\r\n      },\r\n    ],\r\n  };\r\n\r\n  KMapChart.setOption(option);\r\n}\r\n\r\nfunction nodeClick(params) {\r\n  const index = seriesData.value.findIndex((item) => item.id === params.data.id);\r\n  console.log('点了节点：' + (index + 1), 'clicked');\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.k-map-chart {\r\n  height: 80vh;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAA8C;EAAzCC,EAAE,EAAC,WAAW;EAACC,KAAK,EAAC;;;EAF9BC,GAAA;AAAA;;;uBACEC,YAAA,CAQeC,uBAAA;IATjBC,OAAA,EAAAC,QAAA,CAEI,MAA8C,CAA9CC,UAA8C,EAC9CR,mBAAA,CAKM,cAJJA,mBAAA,CAA8C;MAArCS,OAAK,EAAEC,MAAA,CAAAC;IAAS,GAAE,YAAU,GAC1BD,MAAA,CAAAE,QAAQ,I,cAAnBC,mBAAA,CAEM,OAPZC,UAAA,GAMQd,mBAAA,CAAqB,WAAAe,gBAAA,CAAfL,MAAA,CAAAE,QAAQ,iB,KANtBI,mBAAA,e;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}