{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chartRef\",\n  style: {\n    width: '100%',\n    height: '400px'\n  }\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","style","width","height","_createElementBlock","_hoisted_1"],"sources":["D:\\code\\bugzilla\\527\\front-end\\src\\components\\DataStatistics.vue"],"sourcesContent":["<template>\r\n    <div ref=\"chartRef\" :style=\"{width: '100%', height: '400px'}\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport * from \"vue\";\r\n\r\nconst props = defineProps({\r\n    data: {\r\n        type: Array,\r\n        required: true\r\n    },\r\n    xAxisDataKey: {\r\n        type: String,\r\n        default: 'date'\r\n    },\r\n    yAxisDataKey: {\r\n        type: String,\r\n        default: 'value'\r\n    }\r\n});\r\n\r\nconst chartRef = ref(null);\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nlet chart;\r\n\r\nconst getOption = () => {\r\n    return {\r\n        xAxis: {\r\n            type: 'category',\r\n            data: props.data.map(item => item[props.xAxisDataKey])\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        series: [\r\n            {\r\n                data: props.data.map(item => item[props.yAxisDataKey]),\r\n                type: 'line'\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\nconst initChart = () => {\r\n    chart = echarts.init(chartRef.value);\r\n    chart.setOption(getOption());\r\n};\r\n\r\n</script>\r\n\r\n<!-- <script>\r\nimport * as echarts from \"echarts\";\r\nimport { onMounted, onUnmounted } from \"vue\";\r\n\r\nexport default {\r\n    name: \"App\",\r\n    props: [\"width\", \"height\"],\r\n    setup() {\r\n        let myEcharts = echarts;\r\n\r\n        onMounted(() => {\r\n            initChart();\r\n        });\r\n\r\n        onUnmounted(() => {\r\n            myEcharts.dispose;\r\n        });\r\n\r\n        function initChart() {\r\n            let chart = myEcharts.init(document.getElementById(\"myEcharts\"), \"purple-passion\");\r\n            chart.setOption({\r\n                color: ['#80FFA5', '#00DDFF', '#37A2FF', '#FF0087', '#FFBF00'],\r\n                title: {\r\n                    text: '标题'\r\n                },\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        type: 'cross',\r\n                        label: {\r\n                            backgroundColor: '#6a7985'\r\n                        }\r\n                    }\r\n                },\r\n                legend: {\r\n                    data: ['Line 1', 'Line 2', 'Line 3', 'Line 4', 'Line 5']\r\n                },\r\n                toolbox: {\r\n                    feature: {\r\n                        saveAsImage: {}\r\n                    }\r\n                },\r\n                grid: {\r\n                    left: '3%',\r\n                    right: '4%',\r\n                    bottom: '3%',\r\n                    containLabel: true\r\n                },\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        boundaryGap: false,\r\n                        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value'\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: 'Line 1',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(128, 255, 165)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(1, 191, 236)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [140, 232, 101, 264, 90, 340, 250]\r\n                    },\r\n                    {\r\n                        name: 'Line 2',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(0, 221, 255)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(77, 119, 255)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [120, 282, 111, 234, 220, 340, 310]\r\n                    },\r\n                    {\r\n                        name: 'Line 3',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(55, 162, 255)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(116, 21, 219)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [320, 132, 201, 334, 190, 130, 220]\r\n                    },\r\n                    {\r\n                        name: 'Line 4',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(255, 0, 135)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(135, 0, 157)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [220, 402, 231, 134, 190, 230, 120]\r\n                    },\r\n                    {\r\n                        name: 'Line 5',\r\n                        type: 'line',\r\n                        stack: 'Total',\r\n                        smooth: true,\r\n                        lineStyle: {\r\n                            width: 0\r\n                        },\r\n                        showSymbol: false,\r\n                        label: {\r\n                            show: true,\r\n                            position: 'top'\r\n                        },\r\n                        areaStyle: {\r\n                            opacity: 0.8,\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgb(255, 191, 0)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgb(224, 62, 76)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        emphasis: {\r\n                            focus: 'series'\r\n                        },\r\n                        data: [220, 302, 181, 234, 210, 290, 150]\r\n                    }\r\n                ]\r\n            });\r\n            window.onresize = function () {\r\n                chart.resize();\r\n            };\r\n        }\r\n\r\n        return {\r\n            initChart\r\n        };\r\n    }\r\n};\r\n</script> -->\r\n"],"mappings":";;EACSA,GAAG,EAAC,UAAU;EAAEC,KAAK,EAAE;IAAAC,KAAA;IAAAC,MAAA;EAAA;;;uBAA5BC,mBAAA,CAAoE,OAApEC,UAAoE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}