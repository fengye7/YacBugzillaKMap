{"ast":null,"code":"import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\r\n * A specialized version of `baseRest` which transforms the rest array.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @param {Function} transform The rest array transform.\r\n * @returns {Function} Returns the new function.\r\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n  return function () {\n    var args = arguments,\n      index = -1,\n      length = nativeMax(args.length - start, 0),\n      array = Array(length);\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\nexport default overRest;","map":{"version":3,"names":["apply","nativeMax","Math","max","overRest","func","start","transform","undefined","length","args","arguments","index","array","Array","otherArgs"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/_overRest.js"],"sourcesContent":["import apply from './_apply.js';\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMax = Math.max;\r\n\r\n/**\r\n * A specialized version of `baseRest` which transforms the rest array.\r\n *\r\n * @private\r\n * @param {Function} func The function to apply a rest parameter to.\r\n * @param {number} [start=func.length-1] The start position of the rest parameter.\r\n * @param {Function} transform The rest array transform.\r\n * @returns {Function} Returns the new function.\r\n */\r\nfunction overRest(func, start, transform) {\r\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\r\n  return function() {\r\n    var args = arguments,\r\n        index = -1,\r\n        length = nativeMax(args.length - start, 0),\r\n        array = Array(length);\r\n\r\n    while (++index < length) {\r\n      array[index] = args[start + index];\r\n    }\r\n    index = -1;\r\n    var otherArgs = Array(start + 1);\r\n    while (++index < start) {\r\n      otherArgs[index] = args[index];\r\n    }\r\n    otherArgs[start] = transform(array);\r\n    return apply(func, this, otherArgs);\r\n  };\r\n}\r\n\r\nexport default overRest;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;;AAE/B;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,QAAQA,CAACC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAE;EACxCD,KAAK,GAAGL,SAAS,CAACK,KAAK,KAAKE,SAAS,GAAIH,IAAI,CAACI,MAAM,GAAG,CAAC,GAAIH,KAAK,EAAE,CAAC,CAAC;EACrE,OAAO,YAAW;IAChB,IAAII,IAAI,GAAGC,SAAS;MAChBC,KAAK,GAAG,CAAC,CAAC;MACVH,MAAM,GAAGR,SAAS,CAACS,IAAI,CAACD,MAAM,GAAGH,KAAK,EAAE,CAAC,CAAC;MAC1CO,KAAK,GAAGC,KAAK,CAACL,MAAM,CAAC;IAEzB,OAAO,EAAEG,KAAK,GAAGH,MAAM,EAAE;MACvBI,KAAK,CAACD,KAAK,CAAC,GAAGF,IAAI,CAACJ,KAAK,GAAGM,KAAK,CAAC;IACpC;IACAA,KAAK,GAAG,CAAC,CAAC;IACV,IAAIG,SAAS,GAAGD,KAAK,CAACR,KAAK,GAAG,CAAC,CAAC;IAChC,OAAO,EAAEM,KAAK,GAAGN,KAAK,EAAE;MACtBS,SAAS,CAACH,KAAK,CAAC,GAAGF,IAAI,CAACE,KAAK,CAAC;IAChC;IACAG,SAAS,CAACT,KAAK,CAAC,GAAGC,SAAS,CAACM,KAAK,CAAC;IACnC,OAAOb,KAAK,CAACK,IAAI,EAAE,IAAI,EAAEU,SAAS,CAAC;EACrC,CAAC;AACH;AAEA,eAAeX,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}