{"ast":null,"code":"import * as echarts from \"echarts\";\nimport { ref, onMounted, watch } from \"vue\";\nimport axios from 'axios';\n\n//axios\n\nexport default {\n  __name: 'LineChart',\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    xAxisDataKey: {\n      type: String,\n      default: 'date'\n    },\n    yAxisDataKey: {\n      type: String,\n      default: 'value'\n    }\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const data = ref({});\n    const chartRef = ref(null);\n    let baseUrl = 'http://47.120.41.97:8002/bugs/';\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(baseUrl + 'statuses');\n        data.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\n        if (chart) {\n          chart.setOption(getOption());\n        }\n        console.log(data);\n        console.log(data.value);\n        console.log(chart);\n        console.log(chart.value);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    const props = __props;\n    onMounted(() => {\n      initChart();\n    });\n    watch(() => props.data, () => {\n      if (chart) {\n        chart.setOption(getOption());\n      }\n    }, {\n      deep: true\n    });\n    let chart;\n    const getOption = () => {\n      return {\n        xAxis: {\n          type: 'category',\n          data: props.data.map(item => item[props.xAxisDataKey])\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: props.data.map(item => item[props.yAxisDataKey]),\n          type: 'line'\n        }]\n      };\n    };\n    const initChart = () => {\n      chart = echarts.init(chartRef.value);\n      chart.setOption(getOption());\n    };\n    const __returned__ = {\n      data,\n      chartRef,\n      get baseUrl() {\n        return baseUrl;\n      },\n      set baseUrl(v) {\n        baseUrl = v;\n      },\n      fetchData,\n      props,\n      get chart() {\n        return chart;\n      },\n      set chart(v) {\n        chart = v;\n      },\n      getOption,\n      initChart,\n      get echarts() {\n        return echarts;\n      },\n      ref,\n      onMounted,\n      watch,\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","ref","onMounted","watch","axios","data","chartRef","baseUrl","fetchData","response","get","value","chart","setOption","getOption","console","log","error","props","__props","initChart","deep","xAxis","type","map","item","xAxisDataKey","yAxis","series","yAxisDataKey","init"],"sources":["D:/code/bugzilla/527/front-end/src/components/LineChart.vue"],"sourcesContent":["<template>\r\n    <el-card>\r\n        <div ref=\"chartRef\" :style=\"{ width: '1000%', height: '600%' }\"></div>\r\n    </el-card>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { defineProps, ref, onMounted, watch } from \"vue\";\r\nimport axios from 'axios';\r\n\r\n//axios\r\nconst data = ref({});\r\nconst chartRef = ref(null);\r\n\r\nlet baseUrl = 'http://47.120.41.97:8002/bugs/'\r\n\r\nconst fetchData = async () => {\r\n    try {\r\n        const response = await axios.get(baseUrl + 'statuses');\r\n        data.value = response.data; // 假设后端返回的数据格式符合饼图需要的数据结构\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n        console.log(data)\r\n        console.log(data.value)\r\n        console.log(chart)\r\n        console.log(chart.value)\r\n\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n    }\r\n};\r\n\r\nconst props = defineProps({\r\n    data: {\r\n        type: Array,\r\n        required: true\r\n    },\r\n    xAxisDataKey: {\r\n        type: String,\r\n        default: 'date'\r\n    },\r\n    yAxisDataKey: {\r\n        type: String,\r\n        default: 'value'\r\n    }\r\n});\r\n\r\nonMounted(() => {\r\n    initChart();\r\n});\r\n\r\nwatch(\r\n    () => props.data,\r\n    () => {\r\n        if (chart) {\r\n            chart.setOption(getOption());\r\n        }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nlet chart;\r\n\r\nconst getOption = () => {\r\n    return {\r\n        xAxis: {\r\n            type: 'category',\r\n            data: props.data.map(item => item[props.xAxisDataKey])\r\n        },\r\n        yAxis: {\r\n            type: 'value'\r\n        },\r\n        series: [\r\n            {\r\n                data: props.data.map(item => item[props.yAxisDataKey]),\r\n                type: 'line'\r\n            }\r\n        ]\r\n    };\r\n};\r\n\r\nconst initChart = () => {\r\n    chart = echarts.init(chartRef.value);\r\n    chart.setOption(getOption());\r\n};\r\n\r\n</script>"],"mappings":"AAOA,OAAO,KAAKA,OAAO,MAAM,SAAS;AAClC,SAAsBC,GAAG,EAAEC,SAAS,EAAEC,KAAK,QAAQ,KAAK;AACxD,OAAOC,KAAK,MAAM,OAAO;;AAEzB;;;;;;;;;;;;;;;;;;;;;;IACA,MAAMC,IAAI,GAAGJ,GAAG,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMK,QAAQ,GAAGL,GAAG,CAAC,IAAI,CAAC;IAE1B,IAAIM,OAAO,GAAG,gCAAgC;IAE9C,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACH,OAAO,GAAG,UAAU,CAAC;QACtDF,IAAI,CAACM,KAAK,GAAGF,QAAQ,CAACJ,IAAI,CAAC,CAAC;QAC5B,IAAIO,KAAK,EAAE;UACPA,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;QAChC;QACAC,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;QACjBU,OAAO,CAACC,GAAG,CAACX,IAAI,CAACM,KAAK,CAAC;QACvBI,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;QAClBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAACD,KAAK,CAAC;MAE5B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC;IAED,MAAMC,KAAK,GAAGC,OAaZ;IAEFjB,SAAS,CAAC,MAAM;MACZkB,SAAS,CAAC,CAAC;IACf,CAAC,CAAC;IAEFjB,KAAK,CACD,MAAMe,KAAK,CAACb,IAAI,EAChB,MAAM;MACF,IAAIO,KAAK,EAAE;QACPA,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;MAChC;IACJ,CAAC,EACD;MAAEO,IAAI,EAAE;IAAK,CACjB,CAAC;IAED,IAAIT,KAAK;IAET,MAAME,SAAS,GAAGA,CAAA,KAAM;MACpB,OAAO;QACHQ,KAAK,EAAE;UACHC,IAAI,EAAE,UAAU;UAChBlB,IAAI,EAAEa,KAAK,CAACb,IAAI,CAACmB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACP,KAAK,CAACQ,YAAY,CAAC;QACzD,CAAC;QACDC,KAAK,EAAE;UACHJ,IAAI,EAAE;QACV,CAAC;QACDK,MAAM,EAAE,CACJ;UACIvB,IAAI,EAAEa,KAAK,CAACb,IAAI,CAACmB,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACP,KAAK,CAACW,YAAY,CAAC,CAAC;UACtDN,IAAI,EAAE;QACV,CAAC;MAET,CAAC;IACL,CAAC;IAED,MAAMH,SAAS,GAAGA,CAAA,KAAM;MACpBR,KAAK,GAAGZ,OAAO,CAAC8B,IAAI,CAACxB,QAAQ,CAACK,KAAK,CAAC;MACpCC,KAAK,CAACC,SAAS,CAACC,SAAS,CAAC,CAAC,CAAC;IAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}