{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as echarts from \"echarts\";\nimport { onMounted, ref } from \"vue\";\nimport getRequestAPI from \"../api/request\";\nimport '../mock/KMapMock';\nexport default {\n  __name: 'KMapCharts',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    require(\"echarts/lib/chart/graph\");\n    require(\"echarts/lib/component/tooltip\");\n    require(\"echarts/lib/component/title\");\n    const proxy = getRequestAPI();\n    let KMapChart = null;\n    let kMapData = ref([]);\n    const seriesData = ref([]);\n    const seriesLinks = ref([]);\n    const categories = ref([]);\n    // const lastClickId = ref(\"\");\n    const colors = [\"#a3d2ca\", \"#056676\", \"#ea2c62\", \"#16a596\", \"#03c4a1\", \"#f5a25d\", \"#8CD282\", \"#32e0c4\", \"#00FAE1\", \"#f05454\"];\n    onMounted(() => {\n      initKMapData();\n      formatData(kMapData);\n      initKMapChart();\n    });\n\n    /**\r\n     * 初始化图表数据\r\n     */\n    function initKMapData() {\n      proxy.$axios({\n        url: \"/getData\",\n        method: \"get\"\n      }).then(res => {\n        alert(\"请求成功!\");\n        kMapData = res.data;\n      });\n    }\n\n    /**\r\n     * 节点点击事件\r\n     */\n    async function nodeClick(params) {\n      const index = seriesData.value.findIndex(item => item.id === params.data.id);\n      console.log(\"点了节点：\" + (index + 1), \"clicked\");\n    }\n\n    /**\r\n     * 设置echarts配置项,重绘画布\r\n     */\n    function initKMapChart() {\n      if (!KMapChart) {\n        KMapChart = echarts.init(document.getElementById(\"KMapChart\"));\n        KMapChart.on(\"click\", params => {\n          if (params.dataType === \"node\") {\n            nodeClick(params); //判断点击的是图表的节点部分\n          }\n        });\n      }\n      // 指定图表的配置项和数据\n      let option = {\n        animationDurationUpdate: 500,\n        // 动画更新变化时间\n        animationEasingUpdate: \"quinticInOut\",\n        tooltip: {\n          show: false\n        },\n        series: [{\n          type: \"graph\",\n          layout: \"force\",\n          legendHoverLink: true,\n          //是否启用图例 hover(悬停) 时的联动高亮。\n          hoverAnimation: true,\n          //是否开启鼠标悬停节点的显示动画\n          focusNodeAdjacency: true,\n          edgeLabel: {\n            position: \"middle\",\n            //边上的文字样式\n            normal: {\n              show: true,\n              textStyle: {\n                fontSize: 12\n              },\n              position: \"middle\",\n              formatter: function (x) {\n                return x.data.name;\n              }\n            }\n          },\n          edgeSymbol: [\"\", \"arrow\"],\n          force: {\n            edgeLength: 15,\n            repulsion: 200\n          },\n          roam: true,\n          draggable: true,\n          //每个节点的拖拉\n          itemStyle: {\n            normal: {\n              color: \"#00FAE1\",\n              cursor: \"pointer\",\n              label: {\n                show: true,\n                position: [-10, -15],\n                textStyle: {\n                  //标签的字体样式\n                  color: \"#fff\",\n                  //字体颜色\n                  fontStyle: \"normal\",\n                  //文字字体的风格 'normal'标准 'italic'斜体 'oblique' 倾斜\n                  fontWeight: \"bold\",\n                  //'normal'标准'bold'粗的'bolder'更粗的'lighter'更细的或100 | 200 | 300 | 400...\n                  fontFamily: \"sans-serif\",\n                  //文字的字体系列\n                  fontSize: 12 //字体大小\n                }\n              },\n              nodeStyle: {\n                brushType: \"both\",\n                borderColor: \"rgba(255,215,0,0.4)\",\n                borderWidth: 1\n              }\n            },\n            emphasis: {\n              //鼠标放上去有阴影效果\n              shadowColor: \"#00FAE1\",\n              shadowOffsetX: 0,\n              shadowOffsetY: 0,\n              shadowBlur: 40\n            }\n          },\n          lineStyle: {\n            width: 2\n          },\n          label: {\n            fontSize: 18\n          },\n          symbolSize: 24,\n          //节点大小\n          links: seriesLinks.value,\n          data: seriesData.value,\n          categories: categories.value,\n          cursor: \"pointer\"\n        }]\n      };\n      // 使用刚指定的配置项和数据显示图表。\n      KMapChart.setOption(option);\n    }\n\n    /**\r\n     * 格式化数据到表格需要的数据\r\n     */\n    function formatData(list) {\n      let nodes = list.seriesData;\n      seriesData.value = [];\n      seriesLinks.value = [];\n      let colorIndex = 0;\n      let data = [];\n      let loadedCat = [];\n      nodes.forEach(item => {\n        if (item.categary && loadedCat.indexOf(item.categary) === -1) {\n          colorIndex = Math.floor(Math.random() * colors.length);\n          loadedCat.push(item.categary);\n          categories.value.push({\n            name: item.categary\n          });\n        }\n        item.itemStyle = {\n          color: colors[colorIndex],\n          borderColor: \"#ffffff\"\n        };\n        data.push(item);\n      });\n      seriesData.value.push(...data);\n      seriesLinks.value.push(...list.linksData);\n    }\n    const __returned__ = {\n      proxy,\n      get KMapChart() {\n        return KMapChart;\n      },\n      set KMapChart(v) {\n        KMapChart = v;\n      },\n      get kMapData() {\n        return kMapData;\n      },\n      set kMapData(v) {\n        kMapData = v;\n      },\n      seriesData,\n      seriesLinks,\n      categories,\n      colors,\n      initKMapData,\n      nodeClick,\n      initKMapChart,\n      formatData,\n      get echarts() {\n        return echarts;\n      },\n      onMounted,\n      ref,\n      get getRequestAPI() {\n        return getRequestAPI;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["echarts","onMounted","ref","getRequestAPI","require","proxy","KMapChart","kMapData","seriesData","seriesLinks","categories","colors","initKMapData","formatData","initKMapChart","$axios","url","method","then","res","alert","data","nodeClick","params","index","value","findIndex","item","id","console","log","init","document","getElementById","on","dataType","option","animationDurationUpdate","animationEasingUpdate","tooltip","show","series","type","layout","legendHoverLink","hoverAnimation","focusNodeAdjacency","edgeLabel","position","normal","textStyle","fontSize","formatter","x","name","edgeSymbol","force","edgeLength","repulsion","roam","draggable","itemStyle","color","cursor","label","fontStyle","fontWeight","fontFamily","nodeStyle","brushType","borderColor","borderWidth","emphasis","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","lineStyle","width","symbolSize","links","setOption","list","nodes","colorIndex","loadedCat","forEach","categary","indexOf","Math","floor","random","length","push","linksData"],"sources":["D:/Files/Code/CoursesProjects/YacBugzilla_KnowledgeMap/front-end/src/components/KMapCharts.vue"],"sourcesContent":["<template>\r\n  <div id=\"KMapChart\" class=\"KMapChart\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport * as echarts from \"echarts\";\r\nimport { onMounted, ref } from \"vue\";\r\nrequire(\"echarts/lib/chart/graph\");\r\nrequire(\"echarts/lib/component/tooltip\");\r\nrequire(\"echarts/lib/component/title\");\r\n\r\nimport  getRequestAPI  from \"../api/request\";\r\nimport '../mock/KMapMock'\r\n\r\nconst proxy = getRequestAPI();\r\nlet KMapChart = null;\r\nlet kMapData = ref([]);\r\nconst seriesData = ref([]);\r\nconst seriesLinks = ref([]);\r\nconst categories = ref([]);\r\n// const lastClickId = ref(\"\");\r\nconst colors = [\r\n  \"#a3d2ca\",\r\n  \"#056676\",\r\n  \"#ea2c62\",\r\n  \"#16a596\",\r\n  \"#03c4a1\",\r\n  \"#f5a25d\",\r\n  \"#8CD282\",\r\n  \"#32e0c4\",\r\n  \"#00FAE1\",\r\n  \"#f05454\",\r\n];\r\n\r\nonMounted(() => {\r\n  initKMapData();\r\n  formatData(kMapData);\r\n  initKMapChart();\r\n});\r\n\r\n/**\r\n * 初始化图表数据\r\n */\r\nfunction initKMapData() {\r\n  proxy\r\n    .$axios({\r\n      url: \"/getData\",\r\n      method: \"get\",\r\n    })\r\n    .then((res) => {\r\n      alert(\"请求成功!\");\r\n      kMapData = res.data;\r\n    });\r\n}\r\n\r\n/**\r\n * 节点点击事件\r\n */\r\nasync function nodeClick(params) {\r\n  const index = seriesData.value.findIndex(\r\n    (item) => item.id === params.data.id\r\n  );\r\n  console.log(\"点了节点：\" + (index + 1), \"clicked\");\r\n}\r\n\r\n/**\r\n * 设置echarts配置项,重绘画布\r\n */\r\nfunction initKMapChart() {\r\n  if (!KMapChart) {\r\n    KMapChart = echarts.init(document.getElementById(\"KMapChart\"));\r\n    KMapChart.on(\"click\", (params) => {\r\n      if (params.dataType === \"node\") {\r\n        nodeClick(params); //判断点击的是图表的节点部分\r\n      }\r\n    });\r\n  }\r\n  // 指定图表的配置项和数据\r\n  let option = {\r\n    animationDurationUpdate: 500, // 动画更新变化时间\r\n    animationEasingUpdate: \"quinticInOut\",\r\n    tooltip: {\r\n      show: false,\r\n    },\r\n    series: [\r\n      {\r\n        type: \"graph\",\r\n        layout: \"force\",\r\n        legendHoverLink: true, //是否启用图例 hover(悬停) 时的联动高亮。\r\n        hoverAnimation: true, //是否开启鼠标悬停节点的显示动画\r\n        focusNodeAdjacency: true,\r\n        edgeLabel: {\r\n          position: \"middle\", //边上的文字样式\r\n          normal: {\r\n            show: true,\r\n            textStyle: {\r\n              fontSize: 12,\r\n            },\r\n            position: \"middle\",\r\n            formatter: function (x) {\r\n              return x.data.name;\r\n            },\r\n          },\r\n        },\r\n        edgeSymbol: [\"\", \"arrow\"],\r\n        force: {\r\n          edgeLength: 15,\r\n          repulsion: 200,\r\n        },\r\n        roam: true,\r\n        draggable: true, //每个节点的拖拉\r\n        itemStyle: {\r\n          normal: {\r\n            color: \"#00FAE1\",\r\n            cursor: \"pointer\",\r\n            label: {\r\n              show: true,\r\n              position: [-10, -15],\r\n              textStyle: {\r\n                //标签的字体样式\r\n                color: \"#fff\", //字体颜色\r\n                fontStyle: \"normal\", //文字字体的风格 'normal'标准 'italic'斜体 'oblique' 倾斜\r\n                fontWeight: \"bold\", //'normal'标准'bold'粗的'bolder'更粗的'lighter'更细的或100 | 200 | 300 | 400...\r\n                fontFamily: \"sans-serif\", //文字的字体系列\r\n                fontSize: 12, //字体大小\r\n              },\r\n            },\r\n            nodeStyle: {\r\n              brushType: \"both\",\r\n              borderColor: \"rgba(255,215,0,0.4)\",\r\n              borderWidth: 1,\r\n            },\r\n          },\r\n          emphasis: {\r\n            //鼠标放上去有阴影效果\r\n            shadowColor: \"#00FAE1\",\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n            shadowBlur: 40,\r\n          },\r\n        },\r\n        lineStyle: {\r\n          width: 2,\r\n        },\r\n        label: {\r\n          fontSize: 18,\r\n        },\r\n        symbolSize: 24, //节点大小\r\n        links: seriesLinks.value,\r\n        data: seriesData.value,\r\n        categories: categories.value,\r\n        cursor: \"pointer\",\r\n      },\r\n    ],\r\n  };\r\n  // 使用刚指定的配置项和数据显示图表。\r\n  KMapChart.setOption(option);\r\n}\r\n\r\n/**\r\n * 格式化数据到表格需要的数据\r\n */\r\nfunction formatData(list) {\r\n  let nodes = list.seriesData;\r\n  seriesData.value = [];\r\n  seriesLinks.value = [];\r\n  let colorIndex = 0;\r\n  let data = [];\r\n  let loadedCat = [];\r\n  nodes.forEach((item) => {\r\n    if (item.categary && loadedCat.indexOf(item.categary) === -1) {\r\n      colorIndex = Math.floor(Math.random() * colors.length);\r\n      loadedCat.push(item.categary);\r\n      categories.value.push({ name: item.categary });\r\n    }\r\n    item.itemStyle = {\r\n      color: colors[colorIndex],\r\n      borderColor: \"#ffffff\",\r\n    };\r\n    data.push(item);\r\n  });\r\n  seriesData.value.push(...data);\r\n  seriesLinks.value.push(...list.linksData);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}