{"ast":null,"code":"import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport unzip from './unzip.js';\n\n/**\r\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\r\n * how regrouped values should be combined. The iteratee is invoked with the\r\n * elements of each group: (...group).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Array\r\n * @param {Array} array The array of grouped elements to process.\r\n * @param {Function} [iteratee=_.identity] The function to combine\r\n *  regrouped values.\r\n * @returns {Array} Returns the new array of regrouped elements.\r\n * @example\r\n *\r\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\r\n * // => [[1, 10, 100], [2, 20, 200]]\r\n *\r\n * _.unzipWith(zipped, _.add);\r\n * // => [3, 30, 300]\r\n */\nfunction unzipWith(array, iteratee) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var result = unzip(array);\n  if (iteratee == null) {\n    return result;\n  }\n  return arrayMap(result, function (group) {\n    return apply(iteratee, undefined, group);\n  });\n}\nexport default unzipWith;","map":{"version":3,"names":["apply","arrayMap","unzip","unzipWith","array","iteratee","length","result","group","undefined"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/unzipWith.js"],"sourcesContent":["import apply from './_apply.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport unzip from './unzip.js';\r\n\r\n/**\r\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\r\n * how regrouped values should be combined. The iteratee is invoked with the\r\n * elements of each group: (...group).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Array\r\n * @param {Array} array The array of grouped elements to process.\r\n * @param {Function} [iteratee=_.identity] The function to combine\r\n *  regrouped values.\r\n * @returns {Array} Returns the new array of regrouped elements.\r\n * @example\r\n *\r\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\r\n * // => [[1, 10, 100], [2, 20, 200]]\r\n *\r\n * _.unzipWith(zipped, _.add);\r\n * // => [3, 30, 300]\r\n */\r\nfunction unzipWith(array, iteratee) {\r\n  if (!(array && array.length)) {\r\n    return [];\r\n  }\r\n  var result = unzip(array);\r\n  if (iteratee == null) {\r\n    return result;\r\n  }\r\n  return arrayMap(result, function(group) {\r\n    return apply(iteratee, undefined, group);\r\n  });\r\n}\r\n\r\nexport default unzipWith;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,aAAa;AAC/B,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,KAAK,MAAM,YAAY;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAClC,IAAI,EAAED,KAAK,IAAIA,KAAK,CAACE,MAAM,CAAC,EAAE;IAC5B,OAAO,EAAE;EACX;EACA,IAAIC,MAAM,GAAGL,KAAK,CAACE,KAAK,CAAC;EACzB,IAAIC,QAAQ,IAAI,IAAI,EAAE;IACpB,OAAOE,MAAM;EACf;EACA,OAAON,QAAQ,CAACM,MAAM,EAAE,UAASC,KAAK,EAAE;IACtC,OAAOR,KAAK,CAACK,QAAQ,EAAEI,SAAS,EAAED,KAAK,CAAC;EAC1C,CAAC,CAAC;AACJ;AAEA,eAAeL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}