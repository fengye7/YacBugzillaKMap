{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport BugComments from '../components/BugComments.vue';\nexport default {\n  __name: 'BugInfoView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const bug = ref(null);\n    const reported = ref({});\n    const modified = ref({});\n    const comments = ref([]);\n    onMounted(() => {\n      const bugId = route.params.id;\n      fetchBugDetails(bugId);\n      fetchReportedDetails(bugId);\n      fetchModifiedDetails(bugId);\n      fetchComments(bugId);\n    });\n    const fetchBugDetails = id => {\n      // 模拟API调用，实际使用时应替换为真实的API请求\n      const fakeData = [{\n        id: 1,\n        status: \"Open\",\n        summary: \"Bug 1 summary\",\n        version: \"1.0\",\n        product: \"Product A\",\n        component: \"Component X\",\n        priority: \"High\",\n        severity: \"Critical\",\n        platform: \"Platform A\",\n        op_sys: \"Linux\",\n        assignee: \"Assignee A\",\n        QA: \"QA A\",\n        ccList: \"user1@example.com, user2@example.com\"\n      }\n      // 添加更多的bug数据\n      ];\n      bug.value = fakeData.find(b => b.id === parseInt(id));\n    };\n    const fetchReportedDetails = () => {\n      // 模拟API调用，实际使用时应替换为真实的API请求\n      reported.value = {\n        user: \"Reporter A\",\n        time: \"2024-01-01 12:00:00\"\n      };\n    };\n    const fetchModifiedDetails = () => {\n      // 模拟API调用，实际使用时应替换为真实的API请求\n      modified.value = {\n        user: \"Modifier B\",\n        time: \"2024-01-02 15:00:00\"\n      };\n    };\n    const fetchComments = () => {\n      // 模拟API调用，实际使用时应替换为真实的API请求\n      comments.value = [{\n        id: 1,\n        commentator: \"User 1\",\n        content: \"This is a comment.\",\n        time: \"2024-01-01 13:00:00\"\n      }, {\n        id: 2,\n        commentator: \"User 2\",\n        content: \"This is another comment.\",\n        time: \"2024-01-02 14:00:00\"\n      }\n      // 添加更多的评论数据\n      ];\n    };\n    const __returned__ = {\n      route,\n      bug,\n      reported,\n      modified,\n      comments,\n      fetchBugDetails,\n      fetchReportedDetails,\n      fetchModifiedDetails,\n      fetchComments,\n      ref,\n      onMounted,\n      get useRoute() {\n        return useRoute;\n      },\n      BugComments\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRoute","BugComments","route","bug","reported","modified","comments","bugId","params","id","fetchBugDetails","fetchReportedDetails","fetchModifiedDetails","fetchComments","fakeData","status","summary","version","product","component","priority","severity","platform","op_sys","assignee","QA","ccList","value","find","b","parseInt","user","time","commentator","content"],"sources":["D:/Files/Code/CoursesProjects/YacBugzilla_KnowledgeMap/front-end/src/views/BugInfoView.vue"],"sourcesContent":["<!-- BugInfoView.vue -->\r\n<template>\r\n  <el-container class=\"bug-info-view\">\r\n    <el-header>\r\n      <h2>Bug Details</h2>\r\n    </el-header>\r\n    <el-main>\r\n      <el-card v-if=\"bug\">\r\n        <h3>{{ bug.product }} - {{ bug.component }}</h3>\r\n        <el-tag type=\"info\">Bug-{{ bug.id }}</el-tag>\r\n        <el-tag>{{ bug.status }}</el-tag>\r\n        <p><strong>Summary:</strong> {{ bug.summary }}</p>\r\n        <p><strong>Version:</strong> {{ bug.version }}</p>\r\n        <p><strong>Priority:</strong> {{ bug.priority }}</p>\r\n        <p><strong>Severity:</strong> {{ bug.severity }}</p>\r\n        <p><strong>Platform:</strong> {{ bug.platform }}</p>\r\n        <p><strong>Operating System:</strong> {{ bug.op_sys }}</p>\r\n        <p><strong>Assignee:</strong> {{ bug.assignee }}</p>\r\n        <p><strong>QA:</strong> {{ bug.QA }}</p>\r\n        <p><strong>CC List:</strong> {{ bug.ccList }}</p>\r\n        <p><strong>Reported By:</strong> {{ reported.user }} at {{ reported.time }}</p>\r\n        <p><strong>Last Modified By:</strong> {{ modified.user }} at {{ modified.time }}</p>\r\n        <bug-comments :comments=\"comments\"></bug-comments>\r\n      </el-card>\r\n      <el-card v-else>\r\n        <p>Loading...</p>\r\n      </el-card>\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nimport BugComments from '../components/BugComments.vue';\r\n\r\nconst route = useRoute();\r\nconst bug = ref(null);\r\nconst reported = ref({});\r\nconst modified = ref({});\r\nconst comments = ref([]);\r\n\r\nonMounted(() => {\r\n  const bugId = route.params.id;\r\n  fetchBugDetails(bugId);\r\n  fetchReportedDetails(bugId);\r\n  fetchModifiedDetails(bugId);\r\n  fetchComments(bugId);\r\n});\r\n\r\nconst fetchBugDetails = (id) => {\r\n  // 模拟API调用，实际使用时应替换为真实的API请求\r\n  const fakeData = [\r\n    {\r\n      id: 1,\r\n      status: \"Open\",\r\n      summary: \"Bug 1 summary\",\r\n      version: \"1.0\",\r\n      product: \"Product A\",\r\n      component: \"Component X\",\r\n      priority: \"High\",\r\n      severity: \"Critical\",\r\n      platform: \"Platform A\",\r\n      op_sys: \"Linux\",\r\n      assignee: \"Assignee A\",\r\n      QA: \"QA A\",\r\n      ccList: \"user1@example.com, user2@example.com\",\r\n    },\r\n    // 添加更多的bug数据\r\n  ];\r\n\r\n  bug.value = fakeData.find(b => b.id === parseInt(id));\r\n};\r\n\r\nconst fetchReportedDetails = () => {\r\n  // 模拟API调用，实际使用时应替换为真实的API请求\r\n  reported.value = {\r\n    user: \"Reporter A\",\r\n    time: \"2024-01-01 12:00:00\",\r\n  };\r\n};\r\n\r\nconst fetchModifiedDetails = () => {\r\n  // 模拟API调用，实际使用时应替换为真实的API请求\r\n  modified.value = {\r\n    user: \"Modifier B\",\r\n    time: \"2024-01-02 15:00:00\",\r\n  };\r\n};\r\n\r\nconst fetchComments = () => {\r\n  // 模拟API调用，实际使用时应替换为真实的API请求\r\n  comments.value = [\r\n    {\r\n      id: 1,\r\n      commentator: \"User 1\",\r\n      content: \"This is a comment.\",\r\n      time: \"2024-01-01 13:00:00\",\r\n    },\r\n    {\r\n      id: 2,\r\n      commentator: \"User 2\",\r\n      content: \"This is another comment.\",\r\n      time: \"2024-01-02 14:00:00\",\r\n    },\r\n    // 添加更多的评论数据\r\n  ];\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.bug-info-view {\r\n  padding: 20px;\r\n}\r\n\r\n.el-header h2 {\r\n  margin: 0;\r\n  font-size: 24px;\r\n}\r\n</style>\r\n"],"mappings":"AAgCA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,WAAW,MAAM,+BAA+B;;;;;;;IAEvD,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,GAAG,GAAGL,GAAG,CAAC,IAAI,CAAC;IACrB,MAAMM,QAAQ,GAAGN,GAAG,CAAC,CAAC,CAAC,CAAC;IACxB,MAAMO,QAAQ,GAAGP,GAAG,CAAC,CAAC,CAAC,CAAC;IACxB,MAAMQ,QAAQ,GAAGR,GAAG,CAAC,EAAE,CAAC;IAExBC,SAAS,CAAC,MAAM;MACd,MAAMQ,KAAK,GAAGL,KAAK,CAACM,MAAM,CAACC,EAAE;MAC7BC,eAAe,CAACH,KAAK,CAAC;MACtBI,oBAAoB,CAACJ,KAAK,CAAC;MAC3BK,oBAAoB,CAACL,KAAK,CAAC;MAC3BM,aAAa,CAACN,KAAK,CAAC;IACtB,CAAC,CAAC;IAEF,MAAMG,eAAe,GAAID,EAAE,IAAK;MAC9B;MACA,MAAMK,QAAQ,GAAG,CACf;QACEL,EAAE,EAAE,CAAC;QACLM,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,eAAe;QACxBC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,WAAW;QACpBC,SAAS,EAAE,aAAa;QACxBC,QAAQ,EAAE,MAAM;QAChBC,QAAQ,EAAE,UAAU;QACpBC,QAAQ,EAAE,YAAY;QACtBC,MAAM,EAAE,OAAO;QACfC,QAAQ,EAAE,YAAY;QACtBC,EAAE,EAAE,MAAM;QACVC,MAAM,EAAE;MACV;MACA;MAAA,CACD;MAEDvB,GAAG,CAACwB,KAAK,GAAGb,QAAQ,CAACc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpB,EAAE,KAAKqB,QAAQ,CAACrB,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,MAAME,oBAAoB,GAAGA,CAAA,KAAM;MACjC;MACAP,QAAQ,CAACuB,KAAK,GAAG;QACfI,IAAI,EAAE,YAAY;QAClBC,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IAED,MAAMpB,oBAAoB,GAAGA,CAAA,KAAM;MACjC;MACAP,QAAQ,CAACsB,KAAK,GAAG;QACfI,IAAI,EAAE,YAAY;QAClBC,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IAED,MAAMnB,aAAa,GAAGA,CAAA,KAAM;MAC1B;MACAP,QAAQ,CAACqB,KAAK,GAAG,CACf;QACElB,EAAE,EAAE,CAAC;QACLwB,WAAW,EAAE,QAAQ;QACrBC,OAAO,EAAE,oBAAoB;QAC7BF,IAAI,EAAE;MACR,CAAC,EACD;QACEvB,EAAE,EAAE,CAAC;QACLwB,WAAW,EAAE,QAAQ;QACrBC,OAAO,EAAE,0BAA0B;QACnCF,IAAI,EAAE;MACR;MACA;MAAA,CACD;IACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}