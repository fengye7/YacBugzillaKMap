{"ast":null,"code":"/**\r\n * 图谱数据源源\r\n */\nimport Mock from 'mockjs'; //导入mockjs\n\n//使用Mock下面提供的mock方法进行需要模拟数据的封装\n//参数1，是需要拦截的完整请求地址，参数2，是请求方式，参数3，是请求的模拟数据\n\nlet data = Mock.mock({\n  status: 200,\n  //请求成功状态码\n  dataset: {\n    nodes: [{\n      id: 1,\n      name: '测试节点1',\n      categary: '1',\n      symbolSize: 60\n    }, {\n      id: 2,\n      name: '测试节点2',\n      categary: '1',\n      symbolSize: 40\n    }, {\n      id: 3,\n      name: '测试节点3',\n      categary: '2'\n    }, {\n      id: 4,\n      name: '测试节点4',\n      categary: ''\n    }, {\n      id: 5,\n      name: '测试节点5',\n      categary: ''\n    }, {\n      id: 6,\n      name: '测试节点6',\n      categary: '2'\n    }, {\n      id: 7,\n      name: '测试节点7',\n      categary: ''\n    }, {\n      id: 8,\n      name: '测试节点8',\n      categary: ''\n    }, {\n      id: 9,\n      name: '测试节点9',\n      categary: ''\n    }, {\n      id: 10,\n      name: '测试节点10',\n      categary: ''\n    }],\n    links: [{\n      source: '2',\n      target: '3',\n      name: ''\n    }, {\n      source: '3',\n      target: '4',\n      name: ''\n    }, {\n      source: '3',\n      target: '5',\n      name: ''\n    }, {\n      source: '5',\n      target: '6',\n      name: ''\n    }, {\n      source: '5',\n      target: '7',\n      name: ''\n    }, {\n      source: '5',\n      target: '8',\n      name: ''\n    }, {\n      source: '9',\n      target: '10',\n      name: ''\n    }, {\n      source: '10',\n      target: '9',\n      name: ''\n    }, {\n      source: '1',\n      target: '2',\n      name: ''\n    }, {\n      source: '1',\n      target: '10',\n      name: ''\n    }]\n  }\n});\nMock.mock(/kMap\\/getKMapDataMock/, 'get', () => {\n  //三个参数。第一个：路径，第二个：请求方式post/get，第三个：回调，返回值\\/goodAll/, 'post', () => { //三个参数。第一个：路径，第二个：请求方式post/get，第三个：回调，返回值\n  return data;\n});","map":{"version":3,"names":["Mock","data","mock","status","dataset","nodes","id","name","categary","symbolSize","links","source","target"],"sources":["D:/Files/Code/CoursesProjects/YacBugzilla_KnowledgeMap/front-end/src/mock/KMapMock.js"],"sourcesContent":["/**\r\n * 图谱数据源源\r\n */\r\nimport Mock from 'mockjs'  //导入mockjs\r\n\r\n//使用Mock下面提供的mock方法进行需要模拟数据的封装\r\n//参数1，是需要拦截的完整请求地址，参数2，是请求方式，参数3，是请求的模拟数据\r\n\r\nlet data = Mock.mock({\r\n    status:200, //请求成功状态码\r\n    dataset:{\r\n        nodes: [\r\n            {\r\n                id:1,\r\n                name:'测试节点1',\r\n                categary:'1',\r\n                symbolSize: 60\r\n            },\r\n            {\r\n                id:2,\r\n                name:'测试节点2',\r\n                categary:'1',\r\n                symbolSize: 40\r\n            },\r\n            {\r\n                id:3,\r\n                name:'测试节点3',\r\n                categary:'2',\r\n            },\r\n            {\r\n                id:4,\r\n                name:'测试节点4',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:5,\r\n                name:'测试节点5',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:6,\r\n                name:'测试节点6',\r\n                categary:'2',\r\n            },\r\n            {\r\n                id:7,\r\n                name:'测试节点7',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:8,\r\n                name:'测试节点8',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:9,\r\n                name:'测试节点9',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:10,\r\n                name:'测试节点10',\r\n                categary:'',\r\n            }\r\n        ],\r\n        links: [\r\n            {source: '2', target: '3', name: ''},\r\n            {source: '3', target: '4', name: ''},\r\n            {source: '3', target: '5', name: ''},\r\n            {source: '5', target: '6', name: ''},\r\n            {source: '5', target: '7', name: ''},\r\n            {source: '5', target: '8', name: ''},\r\n            {source: '9', target: '10', name: ''},\r\n            {source: '10', target: '9', name: ''},\r\n            {source: '1', target: '2' , name: ''},\r\n            {source: '1', target: '10', name: ''}\r\n            \r\n        ]\r\n    }\r\n    })\r\n\r\n    Mock.mock(/kMap\\/getKMapDataMock/, 'get', () => { //三个参数。第一个：路径，第二个：请求方式post/get，第三个：回调，返回值\\/goodAll/, 'post', () => { //三个参数。第一个：路径，第二个：请求方式post/get，第三个：回调，返回值\r\n        return data\r\n    })\r\n    "],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,QAAQ,EAAE;;AAE3B;AACA;;AAEA,IAAIC,IAAI,GAAGD,IAAI,CAACE,IAAI,CAAC;EACjBC,MAAM,EAAC,GAAG;EAAE;EACZC,OAAO,EAAC;IACJC,KAAK,EAAE,CACH;MACIC,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC,GAAG;MACZC,UAAU,EAAE;IAChB,CAAC,EACD;MACIH,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC,GAAG;MACZC,UAAU,EAAE;IAChB,CAAC,EACD;MACIH,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;IACb,CAAC,EACD;MACIF,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;IACb,CAAC,EACD;MACIF,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;IACb,CAAC,EACD;MACIF,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;IACb,CAAC,EACD;MACIF,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;IACb,CAAC,EACD;MACIF,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;IACb,CAAC,EACD;MACIF,EAAE,EAAC,CAAC;MACJC,IAAI,EAAC,OAAO;MACZC,QAAQ,EAAC;IACb,CAAC,EACD;MACIF,EAAE,EAAC,EAAE;MACLC,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAC;IACb,CAAC,CACJ;IACDE,KAAK,EAAE,CACH;MAACC,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEL,IAAI,EAAE;IAAE,CAAC,EACpC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEL,IAAI,EAAE;IAAE,CAAC,EACpC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEL,IAAI,EAAE;IAAE,CAAC,EACpC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEL,IAAI,EAAE;IAAE,CAAC,EACpC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEL,IAAI,EAAE;IAAE,CAAC,EACpC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAEL,IAAI,EAAE;IAAE,CAAC,EACpC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,IAAI;MAAEL,IAAI,EAAE;IAAE,CAAC,EACrC;MAACI,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE,GAAG;MAAEL,IAAI,EAAE;IAAE,CAAC,EACrC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,GAAG;MAAGL,IAAI,EAAE;IAAE,CAAC,EACrC;MAACI,MAAM,EAAE,GAAG;MAAEC,MAAM,EAAE,IAAI;MAAEL,IAAI,EAAE;IAAE,CAAC;EAG7C;AACA,CAAC,CAAC;AAEFP,IAAI,CAACE,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,MAAM;EAAE;EAC9C,OAAOD,IAAI;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}