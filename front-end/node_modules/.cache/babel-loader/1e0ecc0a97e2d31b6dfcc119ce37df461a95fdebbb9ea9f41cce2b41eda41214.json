{"ast":null,"code":"import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\r\n * The opposite of `_.before`; this method creates a function that invokes\r\n * `func` once it's called `n` or more times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {number} n The number of calls before `func` is invoked.\r\n * @param {Function} func The function to restrict.\r\n * @returns {Function} Returns the new restricted function.\r\n * @example\r\n *\r\n * var saves = ['profile', 'settings'];\r\n *\r\n * var done = _.after(saves.length, function() {\r\n *   console.log('done saving!');\r\n * });\r\n *\r\n * _.forEach(saves, function(type) {\r\n *   asyncSave({ 'type': type, 'complete': done });\r\n * });\r\n * // => Logs 'done saving!' after the two async saves have completed.\r\n */\nfunction after(n, func) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function () {\n    if (--n < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\nexport default after;","map":{"version":3,"names":["toInteger","FUNC_ERROR_TEXT","after","n","func","TypeError","apply","arguments"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/after.js"],"sourcesContent":["import toInteger from './toInteger.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * The opposite of `_.before`; this method creates a function that invokes\r\n * `func` once it's called `n` or more times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Function\r\n * @param {number} n The number of calls before `func` is invoked.\r\n * @param {Function} func The function to restrict.\r\n * @returns {Function} Returns the new restricted function.\r\n * @example\r\n *\r\n * var saves = ['profile', 'settings'];\r\n *\r\n * var done = _.after(saves.length, function() {\r\n *   console.log('done saving!');\r\n * });\r\n *\r\n * _.forEach(saves, function(type) {\r\n *   asyncSave({ 'type': type, 'complete': done });\r\n * });\r\n * // => Logs 'done saving!' after the two async saves have completed.\r\n */\r\nfunction after(n, func) {\r\n  if (typeof func != 'function') {\r\n    throw new TypeError(FUNC_ERROR_TEXT);\r\n  }\r\n  n = toInteger(n);\r\n  return function() {\r\n    if (--n < 1) {\r\n      return func.apply(this, arguments);\r\n    }\r\n  };\r\n}\r\n\r\nexport default after;\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;;AAEtC;AACA,IAAIC,eAAe,GAAG,qBAAqB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,CAAC,EAAEC,IAAI,EAAE;EACtB,IAAI,OAAOA,IAAI,IAAI,UAAU,EAAE;IAC7B,MAAM,IAAIC,SAAS,CAACJ,eAAe,CAAC;EACtC;EACAE,CAAC,GAAGH,SAAS,CAACG,CAAC,CAAC;EAChB,OAAO,YAAW;IAChB,IAAI,EAAEA,CAAC,GAAG,CAAC,EAAE;MACX,OAAOC,IAAI,CAACE,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;IACpC;EACF,CAAC;AACH;AAEA,eAAeL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}