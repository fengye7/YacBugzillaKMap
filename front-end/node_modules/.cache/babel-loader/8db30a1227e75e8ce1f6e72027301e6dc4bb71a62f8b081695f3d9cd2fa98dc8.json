{"ast":null,"code":"/**\r\n * 图谱数据源源\r\n */\nimport Mock from 'mockjs'; //导入mockjs\n\n//使用Mock下面提供的mock方法进行需要模拟数据的封装\n//参数1，是需要拦截的完整请求地址，参数2，是请求方式，参数3，是请求的模拟数据\n\nMock.mock('/getKMapData', 'get', {\n  status: 200,\n  //请求成功状态码\n  dataset: {\n    data: [{\n      id: 1,\n      name: '测试节点',\n      categary: '1',\n      symbolSize: 60\n    }, {\n      id: 2,\n      name: '测试节点',\n      categary: '1',\n      symbolSize: 40\n    }, {\n      id: 3,\n      name: '测试节点',\n      categary: '2'\n    }, {\n      id: 4,\n      name: '测试节点',\n      categary: ''\n    }, {\n      id: 5,\n      name: '测试节点测试节点',\n      categary: ''\n    }, {\n      id: 6,\n      name: '测试节点',\n      categary: '2'\n    }, {\n      id: 7,\n      name: '测试节点',\n      categary: ''\n    }, {\n      id: 8,\n      name: '测试节点',\n      categary: ''\n    }, {\n      id: 9,\n      name: '测试节点',\n      categary: ''\n    }, {\n      id: 10,\n      name: '测试节点',\n      categary: '',\n      测试节点\n    }],\n    linkData: [{\n      source: '2',\n      target: '3',\n      name: ''\n    }, {\n      source: '3',\n      target: '4',\n      name: ''\n    }, {\n      source: '3',\n      target: '5',\n      name: ''\n    }, {\n      source: '5',\n      target: '6',\n      name: ''\n    }, {\n      source: '5',\n      target: '7',\n      name: ''\n    }, {\n      source: '5',\n      target: '8',\n      name: ''\n    }, {\n      source: '9',\n      target: '10',\n      name: ''\n    }, {\n      source: '10',\n      target: '9',\n      name: ''\n    }, {\n      source: '1',\n      target: '2',\n      name: ''\n    }, {\n      source: '1',\n      target: '10',\n      name: ''\n    }]\n  }\n});\n\n/**\r\n * 模糊查询大类\r\n * @param {*} name \r\n */\nexport const search = name => {\n  return new Promise((resolve, reject) => {\n    let result = {\n      seriesData: [],\n      linksData: []\n    };\n    let list = data.filter(item => item.name.indexOf(name) >= 0);\n    if (list && list.length > 0) {\n      result.seriesData = list || [];\n    } else {\n      result.seriesData = data || [];\n    }\n    result.linksData = linkData || [];\n    if (list.length > 0) {\n      resolve(result);\n    } else {\n      reject();\n    }\n  });\n};\nexport const getAllData = () => {\n  return new Promise((resolve, reject) => {\n    let result = {\n      seriesData: [],\n      linksData: []\n    };\n    result.seriesData = data || [];\n    result.linksData = linkData || [];\n    if (data.length > 0) {\n      resolve(result);\n    } else {\n      reject();\n    }\n  });\n};","map":{"version":3,"names":["Mock","mock","status","dataset","data","id","name","categary","symbolSize","测试节点","linkData","source","target","search","Promise","resolve","reject","result","seriesData","linksData","list","filter","item","indexOf","length","getAllData"],"sources":["D:/Files/Code/CoursesProjects/YacBugzilla_KnowledgeMap/front-end/src/mock/KMapMock.js"],"sourcesContent":["/**\r\n * 图谱数据源源\r\n */\r\nimport Mock from 'mockjs'  //导入mockjs\r\n\r\n//使用Mock下面提供的mock方法进行需要模拟数据的封装\r\n//参数1，是需要拦截的完整请求地址，参数2，是请求方式，参数3，是请求的模拟数据\r\n\r\nMock.mock('/getKMapData', 'get', {\r\n    status:200, //请求成功状态码\r\n    dataset:{\r\n        data: [\r\n            {\r\n                id:1,\r\n                name:'测试节点',\r\n                categary:'1',\r\n                symbolSize: 60\r\n            },\r\n            {\r\n                id:2,\r\n                name:'测试节点',\r\n                categary:'1',\r\n                symbolSize: 40\r\n            },\r\n            {\r\n                id:3,\r\n                name:'测试节点',\r\n                categary:'2',\r\n            },\r\n            {\r\n                id:4,\r\n                name:'测试节点',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:5,\r\n                name:'测试节点测试节点',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:6,\r\n                name:'测试节点',\r\n                categary:'2',\r\n            },\r\n            {\r\n                id:7,\r\n                name:'测试节点',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:8,\r\n                name:'测试节点',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:9,\r\n                name:'测试节点',\r\n                categary:'',\r\n            },\r\n            {\r\n                id:10,\r\n                name:'测试节点',\r\n                categary:'',测试节点\r\n            }\r\n        ],\r\n        linkData: [\r\n            {source: '2', target: '3', name: ''},\r\n            {source: '3', target: '4', name: ''},\r\n            {source: '3', target: '5', name: ''},\r\n            {source: '5', target: '6', name: ''},\r\n            {source: '5', target: '7', name: ''},\r\n            {source: '5', target: '8', name: ''},\r\n            {source: '9', target: '10', name: ''},\r\n            {source: '10', target: '9', name: ''},\r\n            {source: '1', target: '2' , name: ''},\r\n            {source: '1', target: '10', name: ''}\r\n            \r\n        ]\r\n    }\r\n    })\r\n\r\n/**\r\n * 模糊查询大类\r\n * @param {*} name \r\n */\r\nexport const search = (name)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        let result = {\r\n            seriesData: [],\r\n            linksData: []\r\n        }\r\n        let list = data.filter(item=>item.name.indexOf(name)>=0)\r\n        if(list&&list.length>0){\r\n            result.seriesData = list ||[];\r\n        }else{\r\n            result.seriesData = data ||[];\r\n        }\r\n        result.linksData = linkData ||[];\r\n        if(list.length>0){\r\n            resolve(result)\r\n        }else{\r\n            reject()\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const getAllData = ()=>{\r\n    return new Promise((resolve,reject)=>{\r\n        let result = {\r\n            seriesData: [],\r\n            linksData: []\r\n        }\r\n        result.seriesData = data||[];\r\n        result.linksData = linkData ||[];\r\n        if(data.length>0){\r\n            resolve(result)\r\n        }else{\r\n            reject()\r\n        }\r\n    })\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}