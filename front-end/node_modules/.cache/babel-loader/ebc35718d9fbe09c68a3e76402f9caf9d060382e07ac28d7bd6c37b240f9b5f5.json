{"ast":null,"code":"/**\r\n * The base implementation of `_.sum` and `_.sumBy` without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {number} Returns the sum.\r\n */\nfunction baseSum(array, iteratee) {\n  var result,\n    index = -1,\n    length = array.length;\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : result + current;\n    }\n  }\n  return result;\n}\nexport default baseSum;","map":{"version":3,"names":["baseSum","array","iteratee","result","index","length","current","undefined"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/_baseSum.js"],"sourcesContent":["/**\r\n * The base implementation of `_.sum` and `_.sumBy` without support for\r\n * iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} iteratee The function invoked per iteration.\r\n * @returns {number} Returns the sum.\r\n */\r\nfunction baseSum(array, iteratee) {\r\n  var result,\r\n      index = -1,\r\n      length = array.length;\r\n\r\n  while (++index < length) {\r\n    var current = iteratee(array[index]);\r\n    if (current !== undefined) {\r\n      result = result === undefined ? current : (result + current);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport default baseSum;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,OAAOA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAChC,IAAIC,MAAM;IACNC,KAAK,GAAG,CAAC,CAAC;IACVC,MAAM,GAAGJ,KAAK,CAACI,MAAM;EAEzB,OAAO,EAAED,KAAK,GAAGC,MAAM,EAAE;IACvB,IAAIC,OAAO,GAAGJ,QAAQ,CAACD,KAAK,CAACG,KAAK,CAAC,CAAC;IACpC,IAAIE,OAAO,KAAKC,SAAS,EAAE;MACzBJ,MAAM,GAAGA,MAAM,KAAKI,SAAS,GAAGD,OAAO,GAAIH,MAAM,GAAGG,OAAQ;IAC9D;EACF;EACA,OAAOH,MAAM;AACf;AAEA,eAAeH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}