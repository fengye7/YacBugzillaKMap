{"ast":null,"code":"import baseFill from './_baseFill.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\r\n * Fills elements of `array` with `value` from `start` up to, but not\r\n * including, `end`.\r\n *\r\n * **Note:** This method mutates `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Array\r\n * @param {Array} array The array to fill.\r\n * @param {*} value The value to fill `array` with.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = [1, 2, 3];\r\n *\r\n * _.fill(array, 'a');\r\n * console.log(array);\r\n * // => ['a', 'a', 'a']\r\n *\r\n * _.fill(Array(3), 2);\r\n * // => [2, 2, 2]\r\n *\r\n * _.fill([4, 6, 8, 10], '*', 1, 3);\r\n * // => [4, '*', '*', 10]\r\n */\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return baseFill(array, value, start, end);\n}\nexport default fill;","map":{"version":3,"names":["baseFill","isIterateeCall","fill","array","value","start","end","length"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/fill.js"],"sourcesContent":["import baseFill from './_baseFill.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\n\r\n/**\r\n * Fills elements of `array` with `value` from `start` up to, but not\r\n * including, `end`.\r\n *\r\n * **Note:** This method mutates `array`.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Array\r\n * @param {Array} array The array to fill.\r\n * @param {*} value The value to fill `array` with.\r\n * @param {number} [start=0] The start position.\r\n * @param {number} [end=array.length] The end position.\r\n * @returns {Array} Returns `array`.\r\n * @example\r\n *\r\n * var array = [1, 2, 3];\r\n *\r\n * _.fill(array, 'a');\r\n * console.log(array);\r\n * // => ['a', 'a', 'a']\r\n *\r\n * _.fill(Array(3), 2);\r\n * // => [2, 2, 2]\r\n *\r\n * _.fill([4, 6, 8, 10], '*', 1, 3);\r\n * // => [4, '*', '*', 10]\r\n */\r\nfunction fill(array, value, start, end) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\r\n    start = 0;\r\n    end = length;\r\n  }\r\n  return baseFill(array, value, start, end);\r\n}\r\n\r\nexport default fill;\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,cAAc,MAAM,sBAAsB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAE;EACtC,IAAIC,MAAM,GAAGJ,KAAK,IAAI,IAAI,GAAG,CAAC,GAAGA,KAAK,CAACI,MAAM;EAC7C,IAAI,CAACA,MAAM,EAAE;IACX,OAAO,EAAE;EACX;EACA,IAAIF,KAAK,IAAI,OAAOA,KAAK,IAAI,QAAQ,IAAIJ,cAAc,CAACE,KAAK,EAAEC,KAAK,EAAEC,KAAK,CAAC,EAAE;IAC5EA,KAAK,GAAG,CAAC;IACTC,GAAG,GAAGC,MAAM;EACd;EACA,OAAOP,QAAQ,CAACG,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,GAAG,CAAC;AAC3C;AAEA,eAAeJ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}