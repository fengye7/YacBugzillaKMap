{"ast":null,"code":"import baseRest from './_baseRest.js';\nimport unzipWith from './unzipWith.js';\n\n/**\r\n * This method is like `_.zip` except that it accepts `iteratee` to specify\r\n * how grouped values should be combined. The iteratee is invoked with the\r\n * elements of each group: (...group).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to process.\r\n * @param {Function} [iteratee=_.identity] The function to combine\r\n *  grouped values.\r\n * @returns {Array} Returns the new array of grouped elements.\r\n * @example\r\n *\r\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\r\n *   return a + b + c;\r\n * });\r\n * // => [111, 222]\r\n */\nvar zipWith = baseRest(function (arrays) {\n  var length = arrays.length,\n    iteratee = length > 1 ? arrays[length - 1] : undefined;\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return unzipWith(arrays, iteratee);\n});\nexport default zipWith;","map":{"version":3,"names":["baseRest","unzipWith","zipWith","arrays","length","iteratee","undefined","pop"],"sources":["D:/code/bugzilla/527/front-end/node_modules/lodash-es/zipWith.js"],"sourcesContent":["import baseRest from './_baseRest.js';\r\nimport unzipWith from './unzipWith.js';\r\n\r\n/**\r\n * This method is like `_.zip` except that it accepts `iteratee` to specify\r\n * how grouped values should be combined. The iteratee is invoked with the\r\n * elements of each group: (...group).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.8.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to process.\r\n * @param {Function} [iteratee=_.identity] The function to combine\r\n *  grouped values.\r\n * @returns {Array} Returns the new array of grouped elements.\r\n * @example\r\n *\r\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\r\n *   return a + b + c;\r\n * });\r\n * // => [111, 222]\r\n */\r\nvar zipWith = baseRest(function(arrays) {\r\n  var length = arrays.length,\r\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\r\n\r\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\r\n  return unzipWith(arrays, iteratee);\r\n});\r\n\r\nexport default zipWith;\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,SAAS,MAAM,gBAAgB;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,OAAO,GAAGF,QAAQ,CAAC,UAASG,MAAM,EAAE;EACtC,IAAIC,MAAM,GAAGD,MAAM,CAACC,MAAM;IACtBC,QAAQ,GAAGD,MAAM,GAAG,CAAC,GAAGD,MAAM,CAACC,MAAM,GAAG,CAAC,CAAC,GAAGE,SAAS;EAE1DD,QAAQ,GAAG,OAAOA,QAAQ,IAAI,UAAU,IAAIF,MAAM,CAACI,GAAG,CAAC,CAAC,EAAEF,QAAQ,IAAIC,SAAS;EAC/E,OAAOL,SAAS,CAACE,MAAM,EAAEE,QAAQ,CAAC;AACpC,CAAC,CAAC;AAEF,eAAeH,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}